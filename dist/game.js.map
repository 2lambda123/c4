{"version":3,"sources":["C:/Program Files (x86)/Nodist/bin/node_modules/browserify/node_modules/browser-pack/_prelude.js","dist/js/board.js","dist/js/game.js","dist/js/player-ai.js","dist/js/player-human-flyweb.js","dist/js/player-human.js","dist/js/player.js","dist/js/utils.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","then","apply","__generator","body","verb","v","op","TypeError","_","y","label","ops","pop","trys","push","sent","throw","return","Object","defineProperty","BoardPiece","utils_1","Board","canvas","width","CANVAS_WIDTH","height","CANVAS_HEIGHT","context","getContext","reset","prototype","map","ROWS","j","COLUMNS","EMPTY","winnerBoardPiece","Utils","clearCanvas","applyPlayerAction","player","column","isColumnEverFilled","row","_a","animateAction","boardPiece","debug","animationFrame","render","console","log","join","getWinner","_this","direction","isWinningSequence","playerPiece","dir","count","countEmpty","k","isWon","DRAW","announceWinner","message","drawText","x","MESSAGE_X_BEGIN","MESSAGE_Y_BEGIN","maxWidth","MESSAGE_WIDTH","getPlayerColor","PLAYER_1","PLAYER_1_COLOR","PLAYER_2","PLAYER_2_COLOR","newRow","fillStyle","currentY","doAnimation","drawCircle","PIECE_RADIUS","MASK_X_BEGIN","MASK_Y_BEGIN","strokeStyle","drawMask","MASK_COLOR","Math","max","board_1","player_human_flyweb_1","player_ai_1","Game","document","querySelector","board","players","PlayerHumanFlyweb","PlayerAi","currentPlayerId","isMoveAllowed","isGameWon","start","winner","move","currentPlayer","actionSuccesful","action","getAction","getNextPlayer","addEventListener","game","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","create","player_1","_super","ownBoardPieceValue","getBoardPieceValue","enemyBoardPiece","getStateValue","state","chainValue","tempRight","tempBottom","tempBottomRight","tempTopRight","abs","chain","transformValues","returnValue","depth","isLost","BIG_POSITIVE_NUMBER","BIG_NEGATIVE_NUMBER","getMove","alpha","beta","stateValue","MAX_DEPTH","minState","maxState","moveQueue","getMockPlayerAction","actionSuccessful","success","nextState","_b","nextValue","choose","min","clone","Player","player_human_1","BASE_URL","window","location","pathname","substring","lastIndexOf","initServer","server","navigator","publishServer","alert","onfetch","evt","urlParts","url","params","response","contentType","_c","_e","_g","request","split","URLSearchParams","fetch","headers","get","respondWith","Response","bind","blob","Content-Type","PlayerHuman","clickPromiseResolver","handleClick","error","event","rect","getBoundingClientRect","clientX","left","clientY","top","getColumnFromCoord","_d","_f","font","save","fillText","restore","beginPath","arc","PI","fill","doubleRadius","tripleRadius","clearRect","isCoordOnColumn","coord","columnXBegin","radius","getRandomColumnNumber","floor","random","choice","promise","requestAnimationFrame","array","arr","slice","clonedMap","pow"],"mappings":"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","file":"game.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nvar BoardPiece;\n(function (BoardPiece) {\n    BoardPiece[BoardPiece[\"EMPTY\"] = 0] = \"EMPTY\";\n    BoardPiece[BoardPiece[\"PLAYER_1\"] = 1] = \"PLAYER_1\";\n    BoardPiece[BoardPiece[\"PLAYER_2\"] = 2] = \"PLAYER_2\";\n    BoardPiece[BoardPiece[\"DRAW\"] = 3] = \"DRAW\";\n})(BoardPiece = exports.BoardPiece || (exports.BoardPiece = {}));\nvar Board = (function () {\n    function Board(canvas) {\n        this.canvas = canvas;\n        this.canvas.width = Board.CANVAS_WIDTH;\n        this.canvas.height = Board.CANVAS_HEIGHT;\n        this.context = canvas.getContext('2d');\n        this.reset();\n    }\n    Board.prototype.reset = function () {\n        this.map = [];\n        for (var i = 0; i < Board.ROWS; i++) {\n            this.map.push([]);\n            for (var j = 0; j < Board.COLUMNS; j++) {\n                this.map[i].push(BoardPiece.EMPTY);\n            }\n        }\n        this.winnerBoardPiece = BoardPiece.EMPTY;\n        utils_1.Utils.clearCanvas(this);\n    };\n    Board.prototype.applyPlayerAction = function (player, column) {\n        return __awaiter(this, void 0, void 0, function () {\n            var isColumnEverFilled, row, i;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.map[0][column] !== BoardPiece.EMPTY || column < 0 || column >= Board.COLUMNS) {\n                            return [2 /*return*/, false];\n                        }\n                        isColumnEverFilled = false;\n                        row = 0;\n                        for (i = 0; i < Board.ROWS - 1; i++) {\n                            if (this.map[i + 1][column] !== BoardPiece.EMPTY) {\n                                isColumnEverFilled = true;\n                                row = i;\n                                break;\n                            }\n                        }\n                        if (!isColumnEverFilled) {\n                            row = Board.ROWS - 1;\n                        }\n                        return [4 /*yield*/, this.animateAction(row, column, player.boardPiece)];\n                    case 1:\n                        _a.sent();\n                        this.map[row][column] = player.boardPiece;\n                        this.debug();\n                        return [4 /*yield*/, utils_1.Utils.animationFrame()];\n                    case 2:\n                        _a.sent();\n                        this.render();\n                        return [2 /*return*/, true];\n                }\n            });\n        });\n    };\n    Board.prototype.debug = function () {\n        console.log(this.map.map(function (row) { return row.join(' '); }).join('\\n'));\n    };\n    Board.prototype.getWinner = function () {\n        var _this = this;\n        if (this.winnerBoardPiece !== BoardPiece.EMPTY) {\n            return this.winnerBoardPiece;\n        }\n        var direction = [\n            [0, -1],\n            [0, 1],\n            [-1, -1],\n            [-1, 0],\n            [-1, 1],\n            [1, -1],\n            [1, 0],\n            [1, 1]\n        ];\n        var isWinningSequence = function (i, j, playerPiece, dir, count) {\n            if (count >= 4) {\n                return true;\n            }\n            if (i < 0 || j < 0 || i >= Board.ROWS || j >= Board.COLUMNS || _this.map[i][j] !== playerPiece) {\n                return false;\n            }\n            return isWinningSequence(i + dir[0], j + dir[1], playerPiece, dir, count + 1);\n        };\n        var countEmpty = 0;\n        for (var i = 0; i < Board.ROWS; i++) {\n            for (var j = 0; j < Board.COLUMNS; j++) {\n                var playerPiece = this.map[i][j];\n                if (playerPiece !== BoardPiece.EMPTY) {\n                    for (var k = 0; k < direction.length; k++) {\n                        var isWon = isWinningSequence(i + direction[k][0], j + direction[k][1], playerPiece, direction[k], 1);\n                        if (isWon) {\n                            return this.winnerBoardPiece = playerPiece;\n                        }\n                    }\n                }\n                else {\n                    countEmpty++;\n                }\n            }\n        }\n        if (countEmpty === 0) {\n            return this.winnerBoardPiece = BoardPiece.DRAW;\n        }\n        return BoardPiece.EMPTY;\n    };\n    Board.prototype.announceWinner = function () {\n        if (this.winnerBoardPiece === BoardPiece.EMPTY) {\n            return;\n        }\n        var message = 'Thank you for playing - ';\n        if (this.winnerBoardPiece === BoardPiece.DRAW) {\n            message += \"It's a draw\";\n        }\n        else {\n            message += \"Player \" + this.winnerBoardPiece + \" wins\";\n        }\n        message += ' - Click to reset';\n        utils_1.Utils.drawText(this.context, {\n            message: message,\n            x: Board.MESSAGE_X_BEGIN,\n            y: Board.MESSAGE_Y_BEGIN,\n            maxWidth: Board.MESSAGE_WIDTH\n        });\n    };\n    Board.prototype.getPlayerColor = function (boardPiece) {\n        switch (boardPiece) {\n            case BoardPiece.PLAYER_1: return Board.PLAYER_1_COLOR;\n            case BoardPiece.PLAYER_2: return Board.PLAYER_2_COLOR;\n            default: return 'transparent';\n        }\n    };\n    Board.prototype.animateAction = function (newRow, column, boardPiece) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var fillStyle, currentY, doAnimation;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        fillStyle = this.getPlayerColor(boardPiece);\n                        currentY = 0;\n                        doAnimation = function () { return __awaiter(_this, void 0, void 0, function () {\n                            return __generator(this, function (_a) {\n                                utils_1.Utils.clearCanvas(this);\n                                utils_1.Utils.drawCircle(this.context, {\n                                    x: 3 * Board.PIECE_RADIUS * column + Board.MASK_X_BEGIN + 2 * Board.PIECE_RADIUS,\n                                    y: currentY + Board.MASK_Y_BEGIN + 2 * Board.PIECE_RADIUS,\n                                    r: Board.PIECE_RADIUS,\n                                    fillStyle: fillStyle,\n                                    strokeStyle: 'black'\n                                });\n                                this.render();\n                                currentY += Board.PIECE_RADIUS;\n                                return [2 /*return*/];\n                            });\n                        }); };\n                        _a.label = 1;\n                    case 1:\n                        if (!(newRow * 3 * Board.PIECE_RADIUS >= currentY)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, utils_1.Utils.animationFrame()];\n                    case 2:\n                        _a.sent();\n                        doAnimation();\n                        return [3 /*break*/, 1];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ;\n    Board.prototype.render = function () {\n        utils_1.Utils.drawMask(this);\n        for (var y = 0; y < Board.ROWS; y++) {\n            for (var x = 0; x < Board.COLUMNS; x++) {\n                utils_1.Utils.drawCircle(this.context, {\n                    x: 3 * Board.PIECE_RADIUS * x + Board.MASK_X_BEGIN + 2 * Board.PIECE_RADIUS,\n                    y: 3 * Board.PIECE_RADIUS * y + Board.MASK_Y_BEGIN + 2 * Board.PIECE_RADIUS,\n                    r: Board.PIECE_RADIUS,\n                    fillStyle: this.getPlayerColor(this.map[y][x]),\n                    strokeStyle: 'black'\n                });\n            }\n        }\n    };\n    return Board;\n}());\nBoard.ROWS = 6;\nBoard.COLUMNS = 7;\nBoard.CANVAS_HEIGHT = 480;\nBoard.CANVAS_WIDTH = 640;\nBoard.PLAYER_1_COLOR = '#ff4136';\nBoard.PLAYER_2_COLOR = '#0074d9';\nBoard.PIECE_RADIUS = 25;\nBoard.MASK_COLOR = '#dddddd';\nBoard.MASK_X_BEGIN = Math.max(0, Board.CANVAS_WIDTH - (3 * Board.COLUMNS + 1) * Board.PIECE_RADIUS) / 2;\nBoard.MASK_Y_BEGIN = Math.max(0, Board.CANVAS_HEIGHT - (3 * Board.ROWS + 1) * Board.PIECE_RADIUS) / 2;\nBoard.MESSAGE_WIDTH = 400;\nBoard.MESSAGE_X_BEGIN = (Board.CANVAS_WIDTH - Board.MESSAGE_WIDTH) / 2;\nBoard.MESSAGE_Y_BEGIN = 20;\nexports.Board = Board;\n\n//# sourceMappingURL=board.js.map\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar _this = this;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar board_1 = require(\"./board\");\nvar player_human_flyweb_1 = require(\"./player-human-flyweb\");\nvar player_ai_1 = require(\"./player-ai\");\nvar utils_1 = require(\"./utils\");\nvar Game = (function () {\n    function Game() {\n        var canvas = document.querySelector('canvas');\n        this.board = new board_1.Board(canvas);\n        this.players = [\n            new player_human_flyweb_1.PlayerHumanFlyweb(board_1.BoardPiece.PLAYER_1, canvas),\n            new player_ai_1.PlayerAi(board_1.BoardPiece.PLAYER_2, canvas)\n        ];\n        this.currentPlayerId = 0;\n        this.reset();\n    }\n    Game.prototype.reset = function () {\n        this.isMoveAllowed = false;\n        this.isGameWon = false;\n        this.board.reset();\n        this.board.render();\n        this.board.debug();\n    };\n    Game.prototype.start = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var winner;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.isMoveAllowed = true;\n                        _a.label = 1;\n                    case 1:\n                        if (!!this.isGameWon) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.move()];\n                    case 2:\n                        _a.sent();\n                        winner = this.board.getWinner();\n                        if (winner !== board_1.BoardPiece.EMPTY) {\n                            console.log('Game over: winner is player ', winner);\n                            this.isGameWon = true;\n                            this.isMoveAllowed = false;\n                            this.board.announceWinner();\n                            return [3 /*break*/, 3];\n                        }\n                        return [3 /*break*/, 1];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Game.prototype.move = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var currentPlayer, actionSuccesful, action;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isMoveAllowed) {\n                            return [2 /*return*/];\n                        }\n                        currentPlayer = this.players[this.currentPlayerId];\n                        actionSuccesful = false;\n                        _a.label = 1;\n                    case 1:\n                        if (!!actionSuccesful) return [3 /*break*/, 4];\n                        return [4 /*yield*/, currentPlayer.getAction(this.board)];\n                    case 2:\n                        action = _a.sent();\n                        this.isMoveAllowed = false;\n                        return [4 /*yield*/, this.board.applyPlayerAction(currentPlayer, action)];\n                    case 3:\n                        actionSuccesful = _a.sent();\n                        this.isMoveAllowed = true;\n                        if (!actionSuccesful) {\n                            console.log('Move not allowed! Try again.');\n                        }\n                        return [3 /*break*/, 1];\n                    case 4:\n                        this.currentPlayerId = this.getNextPlayer();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Game.prototype.getNextPlayer = function () {\n        return (this.currentPlayerId === 0) ? 1 : 0;\n    };\n    return Game;\n}());\nexports.Game = Game;\ndocument.addEventListener('DOMContentLoaded', function () {\n    var game = new Game();\n    game.start();\n    document.querySelector('canvas').addEventListener('click', function () { return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!game.isGameWon) return [3 /*break*/, 2];\n                    game.reset();\n                    return [4 /*yield*/, utils_1.Utils.animationFrame()];\n                case 1:\n                    _a.sent();\n                    game.start();\n                    _a.label = 2;\n                case 2: return [2 /*return*/];\n            }\n        });\n    }); });\n});\n\n//# sourceMappingURL=game.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar player_1 = require(\"./player\");\nvar board_1 = require(\"./board\");\nvar utils_1 = require(\"./utils\");\nvar PlayerAi = (function (_super) {\n    __extends(PlayerAi, _super);\n    function PlayerAi(boardPiece, canvas) {\n        var _this = _super.call(this, boardPiece, canvas) || this;\n        _this.ownBoardPieceValue = _this.getBoardPieceValue(boardPiece);\n        _this.enemyBoardPiece = (boardPiece === board_1.BoardPiece.PLAYER_1) ? board_1.BoardPiece.PLAYER_2 : board_1.BoardPiece.PLAYER_1;\n        return _this;\n    }\n    PlayerAi.prototype.getBoardPieceValue = function (boardPiece) {\n        return (boardPiece === board_1.BoardPiece.EMPTY)\n            ? 0\n            : boardPiece === this.boardPiece\n                ? 1\n                : -1;\n    };\n    PlayerAi.prototype.getStateValue = function (state) {\n        var winnerBoardPiece = board_1.BoardPiece.EMPTY;\n        var chainValue = 0;\n        for (var i = 0; i < board_1.Board.ROWS; i++) {\n            for (var j = 0; j < board_1.Board.COLUMNS; j++) {\n                var tempRight = 0, tempBottom = 0, tempBottomRight = 0, tempTopRight = 0;\n                for (var k = 0; k <= 3; k++) {\n                    if (j + k < board_1.Board.COLUMNS) {\n                        tempRight += this.getBoardPieceValue(state[i][j + k]);\n                    }\n                    if (i + k < board_1.Board.ROWS) {\n                        tempBottom += this.getBoardPieceValue(state[i + k][j]);\n                    }\n                    if (i + k < board_1.Board.ROWS && j + k < board_1.Board.COLUMNS) {\n                        tempBottomRight += this.getBoardPieceValue(state[i + k][j + k]);\n                    }\n                    if (i - k >= 0 && j + k < 7) {\n                        tempTopRight += this.getBoardPieceValue(state[i - k][j + k]);\n                    }\n                }\n                chainValue += tempRight * tempRight * tempRight;\n                chainValue += tempBottom * tempBottom * tempBottom;\n                chainValue += tempBottomRight * tempBottomRight * tempBottomRight;\n                chainValue += tempTopRight * tempTopRight * tempTopRight;\n                if (Math.abs(tempRight) === 4) {\n                    winnerBoardPiece = tempRight > 0 ? this.boardPiece : this.enemyBoardPiece;\n                }\n                else if (Math.abs(tempBottom) === 4) {\n                    winnerBoardPiece = tempBottom > 0 ? this.boardPiece : this.enemyBoardPiece;\n                }\n                else if (Math.abs(tempBottomRight) === 4) {\n                    winnerBoardPiece = tempBottomRight > 0 ? this.boardPiece : this.enemyBoardPiece;\n                }\n                else if (Math.abs(tempTopRight) === 4) {\n                    winnerBoardPiece = tempTopRight > 0 ? this.boardPiece : this.enemyBoardPiece;\n                }\n            }\n        }\n        return {\n            winnerBoardPiece: winnerBoardPiece,\n            chain: chainValue\n        };\n    };\n    PlayerAi.prototype.transformValues = function (returnValue, winnerBoardPiece, depth) {\n        var isWon = winnerBoardPiece === this.boardPiece;\n        var isLost = winnerBoardPiece === this.enemyBoardPiece;\n        if (isWon) {\n            returnValue = utils_1.Utils.BIG_POSITIVE_NUMBER - 100;\n        }\n        else if (isLost) {\n            returnValue = utils_1.Utils.BIG_NEGATIVE_NUMBER + 100;\n        }\n        returnValue -= depth * depth;\n        return returnValue;\n    };\n    PlayerAi.prototype.getMove = function (state, depth, alpha, beta) {\n        var stateValue = this.getStateValue(state);\n        var isWon = stateValue.winnerBoardPiece === this.boardPiece;\n        var isLost = stateValue.winnerBoardPiece === this.enemyBoardPiece;\n        if (depth >= PlayerAi.MAX_DEPTH || isWon || isLost) {\n            return {\n                value: this.transformValues(stateValue.chain * this.ownBoardPieceValue, stateValue.winnerBoardPiece, depth),\n                move: -1\n            };\n        }\n        return (depth % 2 === 0)\n            ? this.minState(state, depth + 1, alpha, beta)\n            : this.maxState(state, depth + 1, alpha, beta);\n    };\n    PlayerAi.prototype.maxState = function (state, depth, alpha, beta) {\n        var value = utils_1.Utils.BIG_NEGATIVE_NUMBER;\n        var moveQueue = [];\n        for (var column = 0; column < board_1.Board.COLUMNS; column++) {\n            var _a = utils_1.Utils.getMockPlayerAction(state, this.boardPiece, column), actionSuccessful = _a.success, nextState = _a.map;\n            if (actionSuccessful) {\n                var _b = this.getMove(nextState, depth, alpha, beta), nextValue = _b.value, nextMove = _b.move;\n                if (nextValue > value) {\n                    value = nextValue;\n                    moveQueue = [column];\n                }\n                else if (nextValue === value) {\n                    moveQueue.push(column);\n                }\n                if (value > beta) {\n                    return {\n                        value: value,\n                        move: utils_1.Utils.choose(moveQueue)\n                    };\n                }\n                alpha = Math.max(alpha, value);\n            }\n        }\n        return {\n            value: value,\n            move: utils_1.Utils.choose(moveQueue)\n        };\n    };\n    PlayerAi.prototype.minState = function (state, depth, alpha, beta) {\n        var value = utils_1.Utils.BIG_POSITIVE_NUMBER;\n        var moveQueue = [];\n        for (var column = 0; column < board_1.Board.COLUMNS; column++) {\n            var _a = utils_1.Utils.getMockPlayerAction(state, this.enemyBoardPiece, column), actionSuccessful = _a.success, nextState = _a.map;\n            if (actionSuccessful) {\n                var _b = this.getMove(nextState, depth, alpha, beta), nextValue = _b.value, nextMove = _b.move;\n                if (nextValue < value) {\n                    value = nextValue;\n                    moveQueue = [column];\n                }\n                else if (nextValue === value) {\n                    moveQueue.push(column);\n                }\n                if (value < alpha) {\n                    return {\n                        value: value,\n                        move: utils_1.Utils.choose(moveQueue)\n                    };\n                }\n                beta = Math.min(beta, value);\n            }\n        }\n        return {\n            value: value,\n            move: utils_1.Utils.choose(moveQueue)\n        };\n    };\n    PlayerAi.prototype.getAction = function (board) {\n        return __awaiter(this, void 0, void 0, function () {\n            var state, action;\n            return __generator(this, function (_a) {\n                state = utils_1.Utils.clone(board.map);\n                action = this.maxState(state, 0, utils_1.Utils.BIG_NEGATIVE_NUMBER, utils_1.Utils.BIG_POSITIVE_NUMBER);\n                console.log(\"AI \" + this.boardPiece + \" choose column \" + action.move + \" with value of \" + action.value);\n                return [2 /*return*/, action.move];\n            });\n        });\n    };\n    return PlayerAi;\n}(player_1.Player));\nPlayerAi.MAX_DEPTH = 4;\nexports.PlayerAi = PlayerAi;\n\n//# sourceMappingURL=player-ai.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar player_human_1 = require(\"./player-human\");\nvar PlayerHumanFlyweb = (function (_super) {\n    __extends(PlayerHumanFlyweb, _super);\n    function PlayerHumanFlyweb(boardPiece, canvas) {\n        var _this = _super.call(this, boardPiece, canvas) || this;\n        _this.BASE_URL = window.location.pathname.substring(0, window.location.pathname.lastIndexOf('/'));\n        _this.initServer();\n        return _this;\n    }\n    PlayerHumanFlyweb.prototype.initServer = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var server;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!('publishServer' in navigator)) {\n                            window.alert('FlyWeb requires Firefox Developer Edition ');\n                            return [2 /*return*/, false];\n                        }\n                        return [4 /*yield*/, navigator.publishServer('c4 - Connect Four')];\n                    case 1:\n                        server = _a.sent();\n                        server.onfetch = function (evt) { return __awaiter(_this, void 0, void 0, function () {\n                            var urlParts, url, params, _a, response, contentType, _b, _c, _d, _e, _f;\n                            return __generator(this, function (_g) {\n                                switch (_g.label) {\n                                    case 0:\n                                        urlParts = evt.request.url.split('?');\n                                        url = urlParts[0];\n                                        params = new URLSearchParams(urlParts[1]);\n                                        console.log('Requested for url: ', url, params);\n                                        _a = url;\n                                        return [3 /*break*/, 1];\n                                    case 1: return [4 /*yield*/, fetch(this.BASE_URL + url)];\n                                    case 2:\n                                        response = _g.sent();\n                                        contentType = response.headers.get('Content-Type');\n                                        console.log('my response: ', response);\n                                        _c = (_b = evt).respondWith;\n                                        _e = Response.bind;\n                                        return [4 /*yield*/, response.blob()];\n                                    case 3:\n                                        _c.apply(_b, [new (_e.apply(Response, [void 0, _g.sent(), {\n                                                    headers: {\n                                                        'Content-Type': contentType\n                                                    }\n                                                }]))()]);\n                                        _g.label = 4;\n                                    case 4: return [2 /*return*/];\n                                }\n                            });\n                        }); };\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return PlayerHumanFlyweb;\n}(player_human_1.PlayerHuman));\nexports.PlayerHumanFlyweb = PlayerHumanFlyweb;\n\n//# sourceMappingURL=player-human-flyweb.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar player_1 = require(\"./player\");\nvar utils_1 = require(\"./utils\");\nvar PlayerHuman = (function (_super) {\n    __extends(PlayerHuman, _super);\n    function PlayerHuman(boardPiece, canvas) {\n        var _this = _super.call(this, boardPiece, canvas) || this;\n        _this.clickPromiseResolver = null;\n        canvas.addEventListener('click', function (evt) {\n            try {\n                _this.handleClick(evt);\n            }\n            catch (e) {\n                console.error(e);\n            }\n        });\n        return _this;\n    }\n    PlayerHuman.prototype.handleClick = function (event) {\n        var rect = this.canvas.getBoundingClientRect();\n        var x = event.clientX - rect.left;\n        var y = event.clientY - rect.top;\n        var column = utils_1.Utils.getColumnFromCoord({ x: x, y: y });\n        this.clickPromiseResolver(column);\n    };\n    PlayerHuman.prototype.getAction = function (board) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (r) { return _this.clickPromiseResolver = r; })];\n            });\n        });\n    };\n    return PlayerHuman;\n}(player_1.Player));\nexports.PlayerHuman = PlayerHuman;\n\n//# sourceMappingURL=player-human.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Player = (function () {\n    function Player(boardPiece, canvas) {\n        this.boardPiece = boardPiece;\n        this.canvas = canvas;\n    }\n    return Player;\n}());\nexports.Player = Player;\n\n//# sourceMappingURL=player.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar board_1 = require(\"./board\");\nvar Utils = (function () {\n    function Utils() {\n    }\n    Utils.drawText = function (context, _a) {\n        var _b = _a.message, message = _b === void 0 ? '' : _b, _c = _a.x, x = _c === void 0 ? 0 : _c, _d = _a.y, y = _d === void 0 ? 0 : _d, _e = _a.fillStyle, fillStyle = _e === void 0 ? '#111' : _e, _f = _a.font, font = _f === void 0 ? '12pt sans-serif' : _f, _g = _a.maxWidth, maxWidth = _g === void 0 ? Utils.BIG_POSITIVE_NUMBER : _g;\n        context.save();\n        context.font = font;\n        context.fillStyle = fillStyle;\n        context.fillText(message, x, y, maxWidth);\n        context.restore();\n    };\n    Utils.drawCircle = function (context, _a) {\n        var _b = _a.x, x = _b === void 0 ? 0 : _b, _c = _a.y, y = _c === void 0 ? 0 : _c, _d = _a.r, r = _d === void 0 ? 0 : _d, _e = _a.fillStyle, fillStyle = _e === void 0 ? '' : _e, _f = _a.strokeStyle, strokeStyle = _f === void 0 ? '' : _f;\n        context.save();\n        context.fillStyle = fillStyle;\n        context.strokeStyle = strokeStyle;\n        context.beginPath();\n        context.arc(x, y, r, 0, 2 * Math.PI, false);\n        context.fill();\n        context.restore();\n    };\n    Utils.drawMask = function (board) {\n        var context = board.context;\n        context.save();\n        context.fillStyle = board_1.Board.MASK_COLOR;\n        context.beginPath();\n        var doubleRadius = 2 * board_1.Board.PIECE_RADIUS;\n        var tripleRadius = 3 * board_1.Board.PIECE_RADIUS;\n        for (var y = 0; y < board_1.Board.ROWS; y++) {\n            for (var x = 0; x < board_1.Board.COLUMNS; x++) {\n                context.arc(tripleRadius * x + board_1.Board.MASK_X_BEGIN + doubleRadius, tripleRadius * y + board_1.Board.MASK_Y_BEGIN + doubleRadius, board_1.Board.PIECE_RADIUS, 0, 2 * Math.PI);\n                context.rect(tripleRadius * x + board_1.Board.MASK_X_BEGIN + 2 * doubleRadius, tripleRadius * y + board_1.Board.MASK_Y_BEGIN, -2 * doubleRadius, 2 * doubleRadius);\n            }\n        }\n        context.fill();\n        context.restore();\n    };\n    Utils.clearCanvas = function (board) {\n        board.context.clearRect(0, 0, board.canvas.width, board.canvas.height);\n    };\n    Utils.isCoordOnColumn = function (coord, columnXBegin, radius) {\n        return ((coord.x - columnXBegin) * (coord.x - columnXBegin) <= radius * radius);\n    };\n    Utils.getColumnFromCoord = function (coord) {\n        for (var i = 0; i < board_1.Board.COLUMNS; i++) {\n            if (Utils.isCoordOnColumn(coord, 3 * board_1.Board.PIECE_RADIUS * i + board_1.Board.MASK_X_BEGIN + 2 * board_1.Board.PIECE_RADIUS, board_1.Board.PIECE_RADIUS)) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    Utils.getRandomColumnNumber = function () {\n        return Math.floor(Math.random() * board_1.Board.COLUMNS);\n    };\n    Utils.choose = function (choice) {\n        return choice[Math.floor(Math.random() * choice.length)];\n    };\n    Utils.animationFrame = function () {\n        var resolve = null;\n        var promise = new Promise(function (r) { return resolve = r; });\n        window.requestAnimationFrame(resolve);\n        return promise;\n    };\n    Utils.clone = function (array) {\n        var arr = [];\n        for (var i = 0; i < array.length; i++) {\n            arr[i] = array[i].slice();\n        }\n        return arr;\n    };\n    Utils.getMockPlayerAction = function (map, boardPiece, column) {\n        var clonedMap = Utils.clone(map);\n        if (clonedMap[0][column] !== board_1.BoardPiece.EMPTY || column < 0 || column >= board_1.Board.COLUMNS) {\n            return {\n                success: false,\n                map: clonedMap\n            };\n        }\n        var isColumnEverFilled = false;\n        var row = 0;\n        for (var i = 0; i < board_1.Board.ROWS - 1; i++) {\n            if (clonedMap[i + 1][column] !== board_1.BoardPiece.EMPTY) {\n                isColumnEverFilled = true;\n                row = i;\n                break;\n            }\n        }\n        if (!isColumnEverFilled) {\n            row = board_1.Board.ROWS - 1;\n        }\n        clonedMap[row][column] = boardPiece;\n        return {\n            success: true,\n            map: clonedMap\n        };\n    };\n    return Utils;\n}());\nUtils.BIG_POSITIVE_NUMBER = Math.pow(10, 9) + 7;\nUtils.BIG_NEGATIVE_NUMBER = -Utils.BIG_POSITIVE_NUMBER;\nexports.Utils = Utils;\n\n//# sourceMappingURL=utils.js.map\n"]}