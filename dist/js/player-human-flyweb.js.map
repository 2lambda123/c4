{"version":3,"sources":["player-human-flyweb.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,+CAA4C;AAI5C;IAAuC,qCAAW;IAGhD,2BAAY,UAAsB,EAAE,MAAyB;QAA7D,YACE,kBAAM,UAAU,EAAE,MAAM,CAAC,SAE1B;QALQ,cAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;QAInG,KAAI,CAAC,UAAU,EAAE,CAAA;;IACnB,CAAC;IACK,sCAAU,GAAhB;;;;;;;wBACE,EAAE,CAAC,CAAC,CAAC,CAAC,eAAe,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC;4BACpC,MAAM,CAAC,KAAK,CAAC,4CAA4C,CAAC,CAAA;4BAC1D,MAAM,gBAAC,KAAK,EAAA;wBACd,CAAC;wBAEc,qBAAM,SAAS,CAAC,aAAa,CAAC,mBAAmB,CAAC,EAAA;;iCAAlD,SAAkD;wBACjE,MAAM,CAAC,OAAO,GAAG,UAAO,GAAG;gCACrB,QAAQ,EAER,GAAG,EACH,MAAM,gBAMA,WAAW;;;;mDATN,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;8CAE/B,QAAQ,CAAC,CAAC,CAAC;iDACR,IAAI,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wCAC7C,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,GAAG,EAAE,MAAM,CAAC,CAAA;wCAEvC,KAAA,GAAG,CAAA;;4CAEU,qBAAM,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,EAAA;;mDAAhC,SAAgC;sDAC7B,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;wCACxD,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAA;wCACtC,KAAA,CAAA,KAAA,GAAG,CAAA,CAAC,WAAW,CAAA;6CAAK,QAAQ;wCAAC,qBAAM,QAAQ,CAAC,IAAI,EAAE,EAAA;;wCAAlD,cAAgB,cAAI,QAAQ,WAAC,SAAqB,EAAE;oDAClD,OAAO,EAAE;wDACP,cAAc,EAAE,WAAW;qDAC5B;iDACF,KAAC,EAAC,CAAA;;;;;6BAGR,CAAA;;;;;KACF;IACH,wBAAC;AAAD,CAnCA,AAmCC,CAnCsC,0BAAW,GAmCjD;AAnCY,8CAAiB","file":"player-human-flyweb.js","sourcesContent":["/**\r\n * EXPERIMENTAL\r\n * Based on flyweb example \"photo-wall\"\r\n * 2-player not achievable yet, FlyWeb clients currently could play locally with AI :P\r\n */\r\nimport { Player } from './player';\r\nimport { PlayerHuman } from './player-human'\r\nimport { Board, BoardPiece } from './board';\r\nimport { Utils } from './utils';\r\n\r\nexport class PlayerHumanFlyweb extends PlayerHuman {\r\n  readonly BASE_URL = window.location.pathname.substring(0, window.location.pathname.lastIndexOf('/'));\r\n\r\n  constructor(boardPiece: BoardPiece, canvas: HTMLCanvasElement) {\r\n    super(boardPiece, canvas)\r\n    this.initServer()\r\n  }\r\n  async initServer() {\r\n    if (!('publishServer' in navigator)) {\r\n      window.alert('FlyWeb requires Firefox Developer Edition ')\r\n      return false\r\n    }\r\n    // TODO: Fix TypeScript not recognizing navigator.publishServer and the Event it resolved\r\n    const server = await navigator.publishServer('c4 - Connect Four')\r\n    server.onfetch = async (evt) => {\r\n      var urlParts = evt.request.url.split('?');\r\n\r\n      var url = urlParts[0];\r\n      var params = new URLSearchParams(urlParts[1]);\r\n      console.log('Requested for url: ', url, params)\r\n      \r\n      switch (url) {\r\n        default:\r\n          const response = await fetch(this.BASE_URL + url)\r\n          const contentType = response.headers.get('Content-Type')\r\n          console.log('my response: ', response)\r\n          evt.respondWith(new Response(await response.blob(), {\r\n            headers: {\r\n              'Content-Type': contentType\r\n            }\r\n          }))\r\n        \r\n      }\r\n    }\r\n  }\r\n}\r\n"]}