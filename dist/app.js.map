{"version":3,"sources":["C:/Program Files (x86)/Nodist/bin/node_modules/browserify/node_modules/browser-pack/_prelude.js","dist/js/app.js","dist/js/board.js","dist/js/game/game-base.js","dist/js/game/game-flyweb.js","dist/js/game/game-local-2p.js","dist/js/game/game-local-ai.js","dist/js/game/index.js","dist/js/player/index.js","dist/js/player/player-ai.js","dist/js/player/player-flyweb-master.js","dist/js/player/player-flyweb-slave.js","dist/js/player/player-human.js","dist/js/player/player.js","dist/js/utils.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Object","defineProperty","value","Game","board_1","document","addEventListener","board","Board","querySelector","render","modeDOM","modeInputDOMs","querySelectorAll","chosenMode","checked","initGameLocal2p","initGameFlyweb","clientMode","initGameLocalAi","classList","add","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","__generator","body","verb","v","op","TypeError","_","y","label","ops","pop","trys","push","sent","throw","return","BoardPiece","utils_1","canvas","context","getContext","getBoardScale","initConstants","reset","onresize","prototype","map","ROWS","j","COLUMNS","EMPTY","winnerBoardPiece","Utils","clearCanvas","window","innerWidth","SCALE","CANVAS_HEIGHT","CANVAS_WIDTH","PIECE_RADIUS","MASK_X_BEGIN","Math","max","MASK_Y_BEGIN","MESSAGE_WIDTH","MESSAGE_X_BEGIN","MESSAGE_Y_BEGIN","width","height","_this","prevBoardScale","applyPlayerAction","player","column","isColumnEverFilled","row","_a","animateAction","boardPiece","debug","animationFrame","console","log","join","getWinner","direction","isWinningSequence","playerPiece","dir","count","countEmpty","k","isWon","DRAW","announceWinner","message","showMessage","getPlayerColor","PLAYER_1","PLAYER_1_COLOR","PLAYER_2","PLAYER_2_COLOR","newRow","fillStyle","currentY","doAnimation","drawCircle","x","strokeStyle","PIECE_STROKE_STYLE","drawMask","MASK_COLOR","GameBase","players","currentPlayerId","isMoveAllowed","isGameWon","start","winner","move","currentPlayer","actionSuccesful","action","getAction","getNextPlayer","_b","player_1","PlayerFlywebSlave","PlayerFlywebMaster","game","GameFlyweb","playerMaster","socket","send","JSON","stringify","type","data","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","create","game_base_1","_super","BASE_URL","location","pathname","substring","lastIndexOf","browser","navigator","isAcceptingPlayer","playerSlave","initClient","initServer","handleClientWs","WebSocket","host","onopen","evt","onclose","onerror","close","onmessage","parse","doAction","fetch","url","response","contentType","blob","headers","get","Content-Type","Cache-Control","Pragma","Expires","respondWith","Response","handleWsServer","accept","accepted","server","publishServer","onfetch","urlParts","params","request","split","URLSearchParams","onwebsocket","GameLocal2p","PlayerHuman","GameLocalAi","PlayerAi","__export","m","ownBoardPieceValue","getBoardPieceValue","enemyBoardPiece","getStateValue","state","chainValue","tempRight","tempBottom","tempBottomRight","tempTopRight","abs","chain","transformValues","returnValue","depth","isLost","BIG_POSITIVE_NUMBER","BIG_NEGATIVE_NUMBER","getMove","alpha","beta","stateValue","MAX_DEPTH","minState","maxState","moveQueue","getMockPlayerAction","actionSuccessful","success","nextState","nextValue","choose","min","clone","Player","_1","clickPromiseResolver","actionPromiseResolver","handleClick","error","event","rect","getBoundingClientRect","clientX","left","clientY","top","getColumnFromCoord","messageDOM","remove","messageContentDOM","innerHTML","messageDismissDOM","dismissHandler","removeEventListener","_c","_d","_e","_f","save","beginPath","arc","PI","fill","restore","doubleRadius","tripleRadius","clearRect","isCoordOnColumn","coord","columnXBegin","radius","getRandomColumnNumber","floor","random","choice","promise","requestAnimationFrame","array","arr","slice","clonedMap","resize","running","runCallbacks","setTimeout","callbacks","forEach","callback","addCallback","pow"],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Game = require(\"./game\");\nvar board_1 = require(\"./board\");\ndocument.addEventListener('DOMContentLoaded', function () {\n    var board = new board_1.Board(document.querySelector('canvas'));\n    board.render();\n    document.querySelector('.mode-chooser-submit').addEventListener('click', function () {\n        var modeDOM = document.querySelector('.mode');\n        var modeInputDOMs = document.querySelectorAll('.mode-chooser-input');\n        var chosenMode = null;\n        for (var i = 0; i < modeInputDOMs.length; i++) {\n            chosenMode = modeInputDOMs[i].checked ? modeInputDOMs[i].value : null;\n            if (chosenMode) {\n                break;\n            }\n        }\n        if (!chosenMode) {\n            chosenMode = 'offline-ai';\n        }\n        if (chosenMode === 'offline-human') {\n            Game.initGameLocal2p();\n        }\n        else if (chosenMode === 'local-flyweb') {\n            Game.initGameFlyweb({ clientMode: false });\n        }\n        else if (chosenMode === 'offline-ai') {\n            Game.initGameLocalAi();\n        }\n        modeDOM.classList.add('invisible');\n        modeDOM.addEventListener('transitionend', function () {\n            modeDOM.classList.add('hidden');\n        });\n    });\n});\n\n//# sourceMappingURL=app.js.map\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nvar BoardPiece;\n(function (BoardPiece) {\n    BoardPiece[BoardPiece[\"EMPTY\"] = 0] = \"EMPTY\";\n    BoardPiece[BoardPiece[\"PLAYER_1\"] = 1] = \"PLAYER_1\";\n    BoardPiece[BoardPiece[\"PLAYER_2\"] = 2] = \"PLAYER_2\";\n    BoardPiece[BoardPiece[\"DRAW\"] = 3] = \"DRAW\";\n})(BoardPiece = exports.BoardPiece || (exports.BoardPiece = {}));\nvar Board = (function () {\n    function Board(canvas) {\n        this.canvas = canvas;\n        this.context = canvas.getContext('2d');\n        this.getBoardScale();\n        this.initConstants();\n        this.reset();\n        this.onresize();\n    }\n    Board.prototype.reset = function () {\n        this.map = [];\n        for (var i = 0; i < Board.ROWS; i++) {\n            this.map.push([]);\n            for (var j = 0; j < Board.COLUMNS; j++) {\n                this.map[i].push(BoardPiece.EMPTY);\n            }\n        }\n        this.winnerBoardPiece = BoardPiece.EMPTY;\n        utils_1.Utils.clearCanvas(this);\n    };\n    Board.prototype.getBoardScale = function () {\n        return (window.innerWidth < 640)\n            ? Board.SCALE = 0.5\n            : Board.SCALE = 1.0;\n    };\n    Board.prototype.initConstants = function () {\n        Board.CANVAS_HEIGHT = Board.SCALE * 480;\n        Board.CANVAS_WIDTH = Board.SCALE * 640;\n        Board.PIECE_RADIUS = Board.SCALE * 25;\n        Board.MASK_X_BEGIN = Math.max(0, Board.CANVAS_WIDTH - (3 * Board.COLUMNS + 1) * Board.PIECE_RADIUS) / 2;\n        Board.MASK_Y_BEGIN = Math.max(0, Board.CANVAS_HEIGHT - (3 * Board.ROWS + 1) * Board.PIECE_RADIUS) / 2;\n        Board.MESSAGE_WIDTH = Board.SCALE * 400;\n        Board.MESSAGE_X_BEGIN = (Board.CANVAS_WIDTH - Board.MESSAGE_WIDTH) / 2;\n        Board.MESSAGE_Y_BEGIN = Board.SCALE * 20;\n        this.canvas.width = Board.CANVAS_WIDTH;\n        this.canvas.height = Board.CANVAS_HEIGHT;\n    };\n    Board.prototype.onresize = function () {\n        var _this = this;\n        var prevBoardScale = Board.SCALE;\n        utils_1.Utils.onresize().add(function () {\n            _this.getBoardScale();\n            if (prevBoardScale !== Board.SCALE) {\n                prevBoardScale = Board.SCALE;\n                _this.initConstants();\n                utils_1.Utils.clearCanvas(_this);\n                _this.render();\n            }\n        });\n    };\n    Board.prototype.applyPlayerAction = function (player, column) {\n        return __awaiter(this, void 0, void 0, function () {\n            var isColumnEverFilled, row, i;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.map[0][column] !== BoardPiece.EMPTY || column < 0 || column >= Board.COLUMNS) {\n                            return [2 /*return*/, false];\n                        }\n                        isColumnEverFilled = false;\n                        row = 0;\n                        for (i = 0; i < Board.ROWS - 1; i++) {\n                            if (this.map[i + 1][column] !== BoardPiece.EMPTY) {\n                                isColumnEverFilled = true;\n                                row = i;\n                                break;\n                            }\n                        }\n                        if (!isColumnEverFilled) {\n                            row = Board.ROWS - 1;\n                        }\n                        return [4 /*yield*/, this.animateAction(row, column, player.boardPiece)];\n                    case 1:\n                        _a.sent();\n                        this.map[row][column] = player.boardPiece;\n                        this.debug();\n                        return [4 /*yield*/, utils_1.Utils.animationFrame()];\n                    case 2:\n                        _a.sent();\n                        this.render();\n                        return [2 /*return*/, true];\n                }\n            });\n        });\n    };\n    Board.prototype.debug = function () {\n        console.log(this.map.map(function (row) { return row.join(' '); }).join('\\n'));\n    };\n    Board.prototype.getWinner = function () {\n        var _this = this;\n        if (this.winnerBoardPiece !== BoardPiece.EMPTY) {\n            return this.winnerBoardPiece;\n        }\n        var direction = [\n            [0, -1],\n            [0, 1],\n            [-1, -1],\n            [-1, 0],\n            [-1, 1],\n            [1, -1],\n            [1, 0],\n            [1, 1]\n        ];\n        var isWinningSequence = function (i, j, playerPiece, dir, count) {\n            if (count >= 4) {\n                return true;\n            }\n            if (i < 0 || j < 0 || i >= Board.ROWS || j >= Board.COLUMNS || _this.map[i][j] !== playerPiece) {\n                return false;\n            }\n            return isWinningSequence(i + dir[0], j + dir[1], playerPiece, dir, count + 1);\n        };\n        var countEmpty = 0;\n        for (var i = 0; i < Board.ROWS; i++) {\n            for (var j = 0; j < Board.COLUMNS; j++) {\n                var playerPiece = this.map[i][j];\n                if (playerPiece !== BoardPiece.EMPTY) {\n                    for (var k = 0; k < direction.length; k++) {\n                        var isWon = isWinningSequence(i + direction[k][0], j + direction[k][1], playerPiece, direction[k], 1);\n                        if (isWon) {\n                            return this.winnerBoardPiece = playerPiece;\n                        }\n                    }\n                }\n                else {\n                    countEmpty++;\n                }\n            }\n        }\n        if (countEmpty === 0) {\n            return this.winnerBoardPiece = BoardPiece.DRAW;\n        }\n        return BoardPiece.EMPTY;\n    };\n    Board.prototype.announceWinner = function () {\n        if (this.winnerBoardPiece === BoardPiece.EMPTY) {\n            return;\n        }\n        var message = '<h1>Thank you for playing.</h1>';\n        if (this.winnerBoardPiece === BoardPiece.DRAW) {\n            message += \"It's a draw\";\n        }\n        else {\n            message += \"Player \" + this.winnerBoardPiece + \" wins\";\n        }\n        message += '.<br />After dismissing this message, click the board to reset game.';\n        utils_1.Utils.showMessage(message);\n    };\n    Board.prototype.getPlayerColor = function (boardPiece) {\n        switch (boardPiece) {\n            case BoardPiece.PLAYER_1: return Board.PLAYER_1_COLOR;\n            case BoardPiece.PLAYER_2: return Board.PLAYER_2_COLOR;\n            default: return 'transparent';\n        }\n    };\n    Board.prototype.animateAction = function (newRow, column, boardPiece) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var fillStyle, currentY, doAnimation;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        fillStyle = this.getPlayerColor(boardPiece);\n                        currentY = 0;\n                        doAnimation = function () { return __awaiter(_this, void 0, void 0, function () {\n                            return __generator(this, function (_a) {\n                                utils_1.Utils.clearCanvas(this);\n                                utils_1.Utils.drawCircle(this.context, {\n                                    x: 3 * Board.PIECE_RADIUS * column + Board.MASK_X_BEGIN + 2 * Board.PIECE_RADIUS,\n                                    y: currentY + Board.MASK_Y_BEGIN + 2 * Board.PIECE_RADIUS,\n                                    r: Board.PIECE_RADIUS,\n                                    fillStyle: fillStyle,\n                                    strokeStyle: Board.PIECE_STROKE_STYLE\n                                });\n                                this.render();\n                                currentY += Board.PIECE_RADIUS;\n                                return [2 /*return*/];\n                            });\n                        }); };\n                        _a.label = 1;\n                    case 1:\n                        if (!(newRow * 3 * Board.PIECE_RADIUS >= currentY)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, utils_1.Utils.animationFrame()];\n                    case 2:\n                        _a.sent();\n                        doAnimation();\n                        return [3 /*break*/, 1];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ;\n    Board.prototype.render = function () {\n        utils_1.Utils.drawMask(this);\n        for (var y = 0; y < Board.ROWS; y++) {\n            for (var x = 0; x < Board.COLUMNS; x++) {\n                utils_1.Utils.drawCircle(this.context, {\n                    x: 3 * Board.PIECE_RADIUS * x + Board.MASK_X_BEGIN + 2 * Board.PIECE_RADIUS,\n                    y: 3 * Board.PIECE_RADIUS * y + Board.MASK_Y_BEGIN + 2 * Board.PIECE_RADIUS,\n                    r: Board.PIECE_RADIUS,\n                    fillStyle: this.getPlayerColor(this.map[y][x]),\n                    strokeStyle: Board.PIECE_STROKE_STYLE\n                });\n            }\n        }\n    };\n    return Board;\n}());\nBoard.ROWS = 6;\nBoard.COLUMNS = 7;\nBoard.PLAYER_1_COLOR = '#ff4136';\nBoard.PLAYER_2_COLOR = '#0074d9';\nBoard.PIECE_STROKE_STYLE = 'black';\nBoard.MASK_COLOR = '#dddddd';\nexports.Board = Board;\n\n//# sourceMappingURL=board.js.map\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar board_1 = require(\"../board\");\nvar GameBase = (function () {\n    function GameBase(players, canvas) {\n        this.board = new board_1.Board(canvas);\n        this.players = players;\n        this.currentPlayerId = 0;\n        this.reset();\n    }\n    GameBase.prototype.reset = function () {\n        this.isMoveAllowed = false;\n        this.isGameWon = false;\n        this.board.reset();\n        this.board.render();\n        this.board.debug();\n    };\n    GameBase.prototype.start = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var winner;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.isMoveAllowed = true;\n                        _a.label = 1;\n                    case 1:\n                        if (!!this.isGameWon) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.move()];\n                    case 2:\n                        _a.sent();\n                        winner = this.board.getWinner();\n                        if (winner !== board_1.BoardPiece.EMPTY) {\n                            console.log('Game over: winner is player ', winner);\n                            this.isGameWon = true;\n                            this.isMoveAllowed = false;\n                            this.board.announceWinner();\n                            return [3 /*break*/, 3];\n                        }\n                        return [3 /*break*/, 1];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    GameBase.prototype.move = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var currentPlayer, actionSuccesful, action;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isMoveAllowed) {\n                            return [2 /*return*/];\n                        }\n                        currentPlayer = this.players[this.currentPlayerId];\n                        actionSuccesful = false;\n                        _a.label = 1;\n                    case 1:\n                        if (!!actionSuccesful) return [3 /*break*/, 4];\n                        return [4 /*yield*/, currentPlayer.getAction(this.board)];\n                    case 2:\n                        action = _a.sent();\n                        this.isMoveAllowed = false;\n                        return [4 /*yield*/, this.board.applyPlayerAction(currentPlayer, action)];\n                    case 3:\n                        actionSuccesful = _a.sent();\n                        this.isMoveAllowed = true;\n                        if (!actionSuccesful) {\n                            console.log('Move not allowed! Try again.');\n                        }\n                        return [3 /*break*/, 1];\n                    case 4:\n                        this.currentPlayerId = this.getNextPlayer();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    GameBase.prototype.getNextPlayer = function () {\n        return (this.currentPlayerId === 0) ? 1 : 0;\n    };\n    return GameBase;\n}());\nexports.GameBase = GameBase;\n\n//# sourceMappingURL=game-base.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar game_base_1 = require(\"./game-base\");\nvar player_1 = require(\"../player\");\nvar board_1 = require(\"../board\");\nvar utils_1 = require(\"../utils\");\nvar GameFlyweb = (function (_super) {\n    __extends(GameFlyweb, _super);\n    function GameFlyweb(players, canvas, clientMode) {\n        if (clientMode === void 0) { clientMode = false; }\n        var _this = _super.call(this, players, canvas) || this;\n        _this.BASE_URL = window.location.pathname.substring(0, window.location.pathname.lastIndexOf('/'));\n        _this.browser = navigator;\n        _this.isAcceptingPlayer = true;\n        if (clientMode) {\n            _this.playerSlave = players[0];\n            _this.playerMaster = players[1];\n            _this.initClient();\n        }\n        else {\n            _this.playerMaster = players[0];\n            _this.playerSlave = players[1];\n            _this.initServer();\n        }\n        return _this;\n    }\n    GameFlyweb.prototype.initClient = function () {\n        this.handleClientWs();\n    };\n    GameFlyweb.prototype.handleClientWs = function () {\n        var _this = this;\n        var socket = new WebSocket('ws://' + window.location.host + '/api/ws');\n        this.playerMaster.socket = socket;\n        socket.onopen = function (evt) {\n            console.log('socket.onopen()', evt);\n        };\n        socket.onclose = function (evt) {\n            console.log('socket.onclose()', evt);\n        };\n        socket.onerror = function (evt) {\n            console.log('socket.onerror()', evt);\n            socket.close();\n        };\n        socket.onmessage = function (evt) { return __awaiter(_this, void 0, void 0, function () {\n            var message;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        console.log('socket.onmessage()', evt);\n                        message = JSON.parse(evt.data);\n                        if (!message) {\n                            return [2 /*return*/];\n                        }\n                        if (!(message.type === 'start')) return [3 /*break*/, 1];\n                        utils_1.Utils.showMessage('<h1>Welcome!</h1>Connection to Player 1 has been established.');\n                        return [3 /*break*/, 4];\n                    case 1:\n                        if (!(message.type === 'move')) return [3 /*break*/, 2];\n                        this.playerSlave.doAction(message.data.column);\n                        return [3 /*break*/, 4];\n                    case 2:\n                        if (!(message.type === 'reset')) return [3 /*break*/, 4];\n                        this.reset();\n                        return [4 /*yield*/, utils_1.Utils.animationFrame()];\n                    case 3:\n                        _a.sent();\n                        this.start();\n                        _a.label = 4;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        }); };\n    };\n    GameFlyweb.prototype.fetch = function (evt, url) {\n        return __awaiter(this, void 0, void 0, function () {\n            var response, contentType, blob, headers;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, fetch(this.BASE_URL + url)];\n                    case 1:\n                        response = _a.sent();\n                        contentType = response.headers.get('Content-Type');\n                        return [4 /*yield*/, response.blob()];\n                    case 2:\n                        blob = _a.sent();\n                        headers = {\n                            'Content-Type': contentType,\n                            'Cache-Control': 'no-cache, no-store, must-revalidate',\n                            'Pragma': 'no-cache',\n                            'Expires': 0\n                        };\n                        console.log('Response is: ', url);\n                        evt.respondWith(new Promise(function (r) { return r(new Response(blob, { headers: headers })); }));\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    GameFlyweb.prototype.handleWsServer = function (evt) {\n        var _this = this;\n        var socket = evt.accept();\n        this.playerMaster.socket = socket;\n        socket.onopen = function (evt) {\n            console.log('socket.onopen()', evt, socket);\n            if (_this.isAcceptingPlayer) {\n                _this.isAcceptingPlayer = false;\n                socket.send(JSON.stringify({\n                    type: 'start',\n                    data: {\n                        accepted: _this.isAcceptingPlayer\n                    }\n                }));\n                utils_1.Utils.showMessage('Connection to Player 2 has been established.');\n            }\n            else {\n                socket.close();\n            }\n        };\n        socket.onclose = function (evt) {\n            console.log('socket.onclose()', evt);\n            _this.isAcceptingPlayer = true;\n            _this.reset();\n        };\n        socket.onerror = function (evt) {\n            console.log('socket.onerror()', evt);\n            _this.isAcceptingPlayer = true;\n            socket.close();\n        };\n        socket.onmessage = function (evt) { return __awaiter(_this, void 0, void 0, function () {\n            var message;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        console.log('socket.onmessage()', evt);\n                        message = JSON.parse(evt.data);\n                        if (!message) {\n                            return [2 /*return*/];\n                        }\n                        if (!(message.type === 'move')) return [3 /*break*/, 1];\n                        this.playerSlave.doAction(message.data.column);\n                        return [3 /*break*/, 3];\n                    case 1:\n                        if (!(message.type === 'reset')) return [3 /*break*/, 3];\n                        this.reset();\n                        return [4 /*yield*/, utils_1.Utils.animationFrame()];\n                    case 2:\n                        _a.sent();\n                        this.start();\n                        _a.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        }); };\n    };\n    GameFlyweb.prototype.initServer = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var server;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!('publishServer' in this.browser)) {\n                            utils_1.Utils.showMessage('<h1>Attention!</h1> FlyWeb requires Firefox Developer Edition or Nightly and enabling \"dom.flyweb.enabled\" flag at about:config');\n                            return [2 /*return*/, false];\n                        }\n                        return [4 /*yield*/, this.browser.publishServer('c4 - Connect Four')];\n                    case 1:\n                        server = _a.sent();\n                        server.onfetch = function (evt) { return __awaiter(_this, void 0, void 0, function () {\n                            var urlParts, url, params, _a;\n                            return __generator(this, function (_b) {\n                                switch (_b.label) {\n                                    case 0:\n                                        urlParts = evt.request.url.split('?');\n                                        url = urlParts[0];\n                                        params = new URLSearchParams(urlParts[1]);\n                                        console.log('Requested for url: ', url, params);\n                                        _a = url;\n                                        switch (_a) {\n                                            case '/dist/app.js': return [3 /*break*/, 1];\n                                        }\n                                        return [3 /*break*/, 3];\n                                    case 1: return [4 /*yield*/, this.fetch(evt, '/dist/app-flyweb-client.js')];\n                                    case 2:\n                                        _b.sent();\n                                        return [3 /*break*/, 5];\n                                    case 3: return [4 /*yield*/, this.fetch(evt, url)];\n                                    case 4:\n                                        _b.sent();\n                                        _b.label = 5;\n                                    case 5: return [2 /*return*/];\n                                }\n                            });\n                        }); };\n                        server.onwebsocket = function (evt) {\n                            var url = evt.request.url;\n                            if (url === '/api/ws') {\n                                _this.handleWsServer(evt);\n                            }\n                        };\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return GameFlyweb;\n}(game_base_1.GameBase));\nfunction initGameFlyweb(_a) {\n    var _this = this;\n    var _b = _a.clientMode, clientMode = _b === void 0 ? false : _b;\n    var canvas = document.querySelector('canvas');\n    var players = null;\n    if (clientMode) {\n        players = [\n            new player_1.PlayerFlywebSlave(board_1.BoardPiece.PLAYER_1, canvas),\n            new player_1.PlayerFlywebMaster(board_1.BoardPiece.PLAYER_2, canvas)\n        ];\n    }\n    else {\n        players = [\n            new player_1.PlayerFlywebMaster(board_1.BoardPiece.PLAYER_1, canvas),\n            new player_1.PlayerFlywebSlave(board_1.BoardPiece.PLAYER_2, canvas)\n        ];\n    }\n    var game = new GameFlyweb(players, canvas, clientMode);\n    game.start();\n    canvas.addEventListener('click', function () { return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!game.isGameWon) return [3 /*break*/, 2];\n                    game.reset();\n                    if (game.playerMaster && game.playerMaster.socket) {\n                        game.playerMaster.socket.send(JSON.stringify({\n                            type: 'reset',\n                            data: {\n                                reset: true\n                            }\n                        }));\n                    }\n                    return [4 /*yield*/, utils_1.Utils.animationFrame()];\n                case 1:\n                    _a.sent();\n                    game.start();\n                    _a.label = 2;\n                case 2: return [2 /*return*/];\n            }\n        });\n    }); });\n}\nexports.initGameFlyweb = initGameFlyweb;\n\n//# sourceMappingURL=game-flyweb.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar board_1 = require(\"../board\");\nvar game_base_1 = require(\"./game-base\");\nvar player_1 = require(\"../player\");\nvar utils_1 = require(\"../utils\");\nvar GameLocal2p = (function (_super) {\n    __extends(GameLocal2p, _super);\n    function GameLocal2p(players, canvas) {\n        return _super.call(this, players, canvas) || this;\n    }\n    return GameLocal2p;\n}(game_base_1.GameBase));\nfunction initGameLocal2p() {\n    var _this = this;\n    var canvas = document.querySelector('canvas');\n    var game = new GameLocal2p([\n        new player_1.PlayerHuman(board_1.BoardPiece.PLAYER_1, canvas),\n        new player_1.PlayerHuman(board_1.BoardPiece.PLAYER_2, canvas)\n    ], canvas);\n    game.start();\n    canvas.addEventListener('click', function () { return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!game.isGameWon) return [3 /*break*/, 2];\n                    game.reset();\n                    return [4 /*yield*/, utils_1.Utils.animationFrame()];\n                case 1:\n                    _a.sent();\n                    game.start();\n                    _a.label = 2;\n                case 2: return [2 /*return*/];\n            }\n        });\n    }); });\n}\nexports.initGameLocal2p = initGameLocal2p;\n\n//# sourceMappingURL=game-local-2p.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar board_1 = require(\"../board\");\nvar game_base_1 = require(\"./game-base\");\nvar player_1 = require(\"../player\");\nvar utils_1 = require(\"../utils\");\nvar GameLocalAi = (function (_super) {\n    __extends(GameLocalAi, _super);\n    function GameLocalAi(players, canvas) {\n        return _super.call(this, players, canvas) || this;\n    }\n    return GameLocalAi;\n}(game_base_1.GameBase));\nfunction initGameLocalAi() {\n    var _this = this;\n    var canvas = document.querySelector('canvas');\n    var game = new GameLocalAi([\n        new player_1.PlayerHuman(board_1.BoardPiece.PLAYER_1, canvas),\n        new player_1.PlayerAi(board_1.BoardPiece.PLAYER_2, canvas)\n    ], canvas);\n    game.start();\n    canvas.addEventListener('click', function () { return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!game.isGameWon) return [3 /*break*/, 2];\n                    game.reset();\n                    return [4 /*yield*/, utils_1.Utils.animationFrame()];\n                case 1:\n                    _a.sent();\n                    game.start();\n                    _a.label = 2;\n                case 2: return [2 /*return*/];\n            }\n        });\n    }); });\n}\nexports.initGameLocalAi = initGameLocalAi;\n\n//# sourceMappingURL=game-local-ai.js.map\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./game-flyweb\"));\n__export(require(\"./game-local-2p\"));\n__export(require(\"./game-local-ai\"));\n\n//# sourceMappingURL=index.js.map\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./player\"));\n__export(require(\"./player-ai\"));\n__export(require(\"./player-human\"));\n__export(require(\"./player-flyweb-master\"));\n__export(require(\"./player-flyweb-slave\"));\n\n//# sourceMappingURL=index.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar player_1 = require(\"./player\");\nvar board_1 = require(\"../board\");\nvar utils_1 = require(\"../utils\");\nvar PlayerAi = (function (_super) {\n    __extends(PlayerAi, _super);\n    function PlayerAi(boardPiece, canvas) {\n        var _this = _super.call(this, boardPiece, canvas) || this;\n        _this.ownBoardPieceValue = _this.getBoardPieceValue(boardPiece);\n        _this.enemyBoardPiece = (boardPiece === board_1.BoardPiece.PLAYER_1) ? board_1.BoardPiece.PLAYER_2 : board_1.BoardPiece.PLAYER_1;\n        return _this;\n    }\n    PlayerAi.prototype.getBoardPieceValue = function (boardPiece) {\n        return (boardPiece === board_1.BoardPiece.EMPTY)\n            ? 0\n            : boardPiece === this.boardPiece\n                ? 1\n                : -1;\n    };\n    PlayerAi.prototype.getStateValue = function (state) {\n        var winnerBoardPiece = board_1.BoardPiece.EMPTY;\n        var chainValue = 0;\n        for (var i = 0; i < board_1.Board.ROWS; i++) {\n            for (var j = 0; j < board_1.Board.COLUMNS; j++) {\n                var tempRight = 0, tempBottom = 0, tempBottomRight = 0, tempTopRight = 0;\n                for (var k = 0; k <= 3; k++) {\n                    if (j + k < board_1.Board.COLUMNS) {\n                        tempRight += this.getBoardPieceValue(state[i][j + k]);\n                    }\n                    if (i + k < board_1.Board.ROWS) {\n                        tempBottom += this.getBoardPieceValue(state[i + k][j]);\n                    }\n                    if (i + k < board_1.Board.ROWS && j + k < board_1.Board.COLUMNS) {\n                        tempBottomRight += this.getBoardPieceValue(state[i + k][j + k]);\n                    }\n                    if (i - k >= 0 && j + k < 7) {\n                        tempTopRight += this.getBoardPieceValue(state[i - k][j + k]);\n                    }\n                }\n                chainValue += tempRight * tempRight * tempRight;\n                chainValue += tempBottom * tempBottom * tempBottom;\n                chainValue += tempBottomRight * tempBottomRight * tempBottomRight;\n                chainValue += tempTopRight * tempTopRight * tempTopRight;\n                if (Math.abs(tempRight) === 4) {\n                    winnerBoardPiece = tempRight > 0 ? this.boardPiece : this.enemyBoardPiece;\n                }\n                else if (Math.abs(tempBottom) === 4) {\n                    winnerBoardPiece = tempBottom > 0 ? this.boardPiece : this.enemyBoardPiece;\n                }\n                else if (Math.abs(tempBottomRight) === 4) {\n                    winnerBoardPiece = tempBottomRight > 0 ? this.boardPiece : this.enemyBoardPiece;\n                }\n                else if (Math.abs(tempTopRight) === 4) {\n                    winnerBoardPiece = tempTopRight > 0 ? this.boardPiece : this.enemyBoardPiece;\n                }\n            }\n        }\n        return {\n            winnerBoardPiece: winnerBoardPiece,\n            chain: chainValue\n        };\n    };\n    PlayerAi.prototype.transformValues = function (returnValue, winnerBoardPiece, depth) {\n        var isWon = winnerBoardPiece === this.boardPiece;\n        var isLost = winnerBoardPiece === this.enemyBoardPiece;\n        if (isWon) {\n            returnValue = utils_1.Utils.BIG_POSITIVE_NUMBER - 100;\n        }\n        else if (isLost) {\n            returnValue = utils_1.Utils.BIG_NEGATIVE_NUMBER + 100;\n        }\n        returnValue -= depth * depth;\n        return returnValue;\n    };\n    PlayerAi.prototype.getMove = function (state, depth, alpha, beta) {\n        var stateValue = this.getStateValue(state);\n        var isWon = stateValue.winnerBoardPiece === this.boardPiece;\n        var isLost = stateValue.winnerBoardPiece === this.enemyBoardPiece;\n        if (depth >= PlayerAi.MAX_DEPTH || isWon || isLost) {\n            return {\n                value: this.transformValues(stateValue.chain * this.ownBoardPieceValue, stateValue.winnerBoardPiece, depth),\n                move: -1\n            };\n        }\n        return (depth % 2 === 0)\n            ? this.minState(state, depth + 1, alpha, beta)\n            : this.maxState(state, depth + 1, alpha, beta);\n    };\n    PlayerAi.prototype.maxState = function (state, depth, alpha, beta) {\n        var value = utils_1.Utils.BIG_NEGATIVE_NUMBER;\n        var moveQueue = [];\n        for (var column = 0; column < board_1.Board.COLUMNS; column++) {\n            var _a = utils_1.Utils.getMockPlayerAction(state, this.boardPiece, column), actionSuccessful = _a.success, nextState = _a.map;\n            if (actionSuccessful) {\n                var _b = this.getMove(nextState, depth, alpha, beta), nextValue = _b.value, nextMove = _b.move;\n                if (nextValue > value) {\n                    value = nextValue;\n                    moveQueue = [column];\n                }\n                else if (nextValue === value) {\n                    moveQueue.push(column);\n                }\n                if (value > beta) {\n                    return {\n                        value: value,\n                        move: utils_1.Utils.choose(moveQueue)\n                    };\n                }\n                alpha = Math.max(alpha, value);\n            }\n        }\n        return {\n            value: value,\n            move: utils_1.Utils.choose(moveQueue)\n        };\n    };\n    PlayerAi.prototype.minState = function (state, depth, alpha, beta) {\n        var value = utils_1.Utils.BIG_POSITIVE_NUMBER;\n        var moveQueue = [];\n        for (var column = 0; column < board_1.Board.COLUMNS; column++) {\n            var _a = utils_1.Utils.getMockPlayerAction(state, this.enemyBoardPiece, column), actionSuccessful = _a.success, nextState = _a.map;\n            if (actionSuccessful) {\n                var _b = this.getMove(nextState, depth, alpha, beta), nextValue = _b.value, nextMove = _b.move;\n                if (nextValue < value) {\n                    value = nextValue;\n                    moveQueue = [column];\n                }\n                else if (nextValue === value) {\n                    moveQueue.push(column);\n                }\n                if (value < alpha) {\n                    return {\n                        value: value,\n                        move: utils_1.Utils.choose(moveQueue)\n                    };\n                }\n                beta = Math.min(beta, value);\n            }\n        }\n        return {\n            value: value,\n            move: utils_1.Utils.choose(moveQueue)\n        };\n    };\n    PlayerAi.prototype.getAction = function (board) {\n        return __awaiter(this, void 0, void 0, function () {\n            var state, action;\n            return __generator(this, function (_a) {\n                state = utils_1.Utils.clone(board.map);\n                action = this.maxState(state, 0, utils_1.Utils.BIG_NEGATIVE_NUMBER, utils_1.Utils.BIG_POSITIVE_NUMBER);\n                console.log(\"AI \" + this.boardPiece + \" choose column \" + action.move + \" with value of \" + action.value);\n                return [2 /*return*/, action.move];\n            });\n        });\n    };\n    return PlayerAi;\n}(player_1.Player));\nPlayerAi.MAX_DEPTH = 4;\nexports.PlayerAi = PlayerAi;\n\n//# sourceMappingURL=player-ai.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = require(\".\");\nvar PlayerFlywebMaster = (function (_super) {\n    __extends(PlayerFlywebMaster, _super);\n    function PlayerFlywebMaster(boardPiece, canvas) {\n        var _this = _super.call(this, boardPiece, canvas) || this;\n        _this.clickPromiseResolver = null;\n        return _this;\n    }\n    PlayerFlywebMaster.prototype.doAction = function (column) {\n        if (this.clickPromiseResolver) {\n            this.clickPromiseResolver(column);\n        }\n        if (!this.socket) {\n            throw Error(\"PlayerFlywebMaster need WebSocket object\");\n        }\n        this.socket.send(JSON.stringify({\n            type: 'move',\n            data: {\n                column: column\n            }\n        }));\n    };\n    PlayerFlywebMaster.prototype.getAction = function (board) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (r) { return _this.clickPromiseResolver = r; })];\n            });\n        });\n    };\n    return PlayerFlywebMaster;\n}(_1.PlayerHuman));\nexports.PlayerFlywebMaster = PlayerFlywebMaster;\n\n//# sourceMappingURL=player-flyweb-master.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar player_1 = require(\"./player\");\nvar PlayerFlywebSlave = (function (_super) {\n    __extends(PlayerFlywebSlave, _super);\n    function PlayerFlywebSlave(boardPiece, canvas) {\n        var _this = _super.call(this, boardPiece, canvas) || this;\n        _this.actionPromiseResolver = null;\n        return _this;\n    }\n    PlayerFlywebSlave.prototype.doAction = function (column) {\n        if (this.actionPromiseResolver) {\n            this.actionPromiseResolver(column);\n        }\n    };\n    PlayerFlywebSlave.prototype.getAction = function (board) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (r) { return _this.actionPromiseResolver = r; })];\n            });\n        });\n    };\n    return PlayerFlywebSlave;\n}(player_1.Player));\nexports.PlayerFlywebSlave = PlayerFlywebSlave;\n\n//# sourceMappingURL=player-flyweb-slave.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar player_1 = require(\"./player\");\nvar utils_1 = require(\"../utils\");\nvar PlayerHuman = (function (_super) {\n    __extends(PlayerHuman, _super);\n    function PlayerHuman(boardPiece, canvas) {\n        var _this = _super.call(this, boardPiece, canvas) || this;\n        _this.clickPromiseResolver = null;\n        canvas.addEventListener('click', function (evt) {\n            try {\n                _this.handleClick(evt);\n            }\n            catch (e) {\n                console.error(e);\n            }\n        });\n        return _this;\n    }\n    PlayerHuman.prototype.doAction = function (column) {\n        if (this.clickPromiseResolver) {\n            this.clickPromiseResolver(column);\n        }\n    };\n    PlayerHuman.prototype.handleClick = function (event) {\n        var rect = this.canvas.getBoundingClientRect();\n        var x = event.clientX - rect.left;\n        var y = event.clientY - rect.top;\n        var column = utils_1.Utils.getColumnFromCoord({ x: x, y: y });\n        this.doAction(column);\n    };\n    PlayerHuman.prototype.getAction = function (board) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (r) { return _this.clickPromiseResolver = r; })];\n            });\n        });\n    };\n    return PlayerHuman;\n}(player_1.Player));\nexports.PlayerHuman = PlayerHuman;\n\n//# sourceMappingURL=player-human.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Player = (function () {\n    function Player(boardPiece, canvas) {\n        this.boardPiece = boardPiece;\n        this.canvas = canvas;\n    }\n    return Player;\n}());\nexports.Player = Player;\n\n//# sourceMappingURL=player.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar board_1 = require(\"./board\");\nvar Utils = (function () {\n    function Utils() {\n    }\n    Utils.showMessage = function (message) {\n        if (message === void 0) { message = ''; }\n        var messageDOM = document.querySelector('.message');\n        messageDOM.classList.remove('hidden');\n        var messageContentDOM = document.querySelector('.message-body-content');\n        messageContentDOM.innerHTML = message;\n        var messageDismissDOM = document.querySelector('.message-body-dismiss');\n        var dismissHandler = function () {\n            messageDOM.classList.add('invisible');\n            messageDOM.addEventListener('transitionend', function () {\n                messageDOM.classList.add('hidden');\n            });\n            messageDismissDOM.removeEventListener('click', dismissHandler);\n        };\n        messageDismissDOM.addEventListener('click', dismissHandler);\n    };\n    Utils.drawCircle = function (context, _a) {\n        var _b = _a.x, x = _b === void 0 ? 0 : _b, _c = _a.y, y = _c === void 0 ? 0 : _c, _d = _a.r, r = _d === void 0 ? 0 : _d, _e = _a.fillStyle, fillStyle = _e === void 0 ? '' : _e, _f = _a.strokeStyle, strokeStyle = _f === void 0 ? '' : _f;\n        context.save();\n        context.fillStyle = fillStyle;\n        context.strokeStyle = strokeStyle;\n        context.beginPath();\n        context.arc(x, y, r, 0, 2 * Math.PI, false);\n        context.fill();\n        context.restore();\n    };\n    Utils.drawMask = function (board) {\n        var context = board.context;\n        context.save();\n        context.fillStyle = board_1.Board.MASK_COLOR;\n        context.beginPath();\n        var doubleRadius = 2 * board_1.Board.PIECE_RADIUS;\n        var tripleRadius = 3 * board_1.Board.PIECE_RADIUS;\n        for (var y = 0; y < board_1.Board.ROWS; y++) {\n            for (var x = 0; x < board_1.Board.COLUMNS; x++) {\n                context.arc(tripleRadius * x + board_1.Board.MASK_X_BEGIN + doubleRadius, tripleRadius * y + board_1.Board.MASK_Y_BEGIN + doubleRadius, board_1.Board.PIECE_RADIUS, 0, 2 * Math.PI);\n                context.rect(tripleRadius * x + board_1.Board.MASK_X_BEGIN + 2 * doubleRadius, tripleRadius * y + board_1.Board.MASK_Y_BEGIN, -2 * doubleRadius, 2 * doubleRadius);\n            }\n        }\n        context.fill();\n        context.restore();\n    };\n    Utils.clearCanvas = function (board) {\n        board.context.clearRect(0, 0, board.canvas.width, board.canvas.height);\n    };\n    Utils.isCoordOnColumn = function (coord, columnXBegin, radius) {\n        return ((coord.x - columnXBegin) * (coord.x - columnXBegin) <= radius * radius);\n    };\n    Utils.getColumnFromCoord = function (coord) {\n        for (var i = 0; i < board_1.Board.COLUMNS; i++) {\n            if (Utils.isCoordOnColumn(coord, 3 * board_1.Board.PIECE_RADIUS * i + board_1.Board.MASK_X_BEGIN + 2 * board_1.Board.PIECE_RADIUS, board_1.Board.PIECE_RADIUS)) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    Utils.getRandomColumnNumber = function () {\n        return Math.floor(Math.random() * board_1.Board.COLUMNS);\n    };\n    Utils.choose = function (choice) {\n        return choice[Math.floor(Math.random() * choice.length)];\n    };\n    Utils.animationFrame = function () {\n        var resolve = null;\n        var promise = new Promise(function (r) { return resolve = r; });\n        window.requestAnimationFrame(resolve);\n        return promise;\n    };\n    Utils.clone = function (array) {\n        var arr = [];\n        for (var i = 0; i < array.length; i++) {\n            arr[i] = array[i].slice();\n        }\n        return arr;\n    };\n    Utils.getMockPlayerAction = function (map, boardPiece, column) {\n        var clonedMap = Utils.clone(map);\n        if (clonedMap[0][column] !== board_1.BoardPiece.EMPTY || column < 0 || column >= board_1.Board.COLUMNS) {\n            return {\n                success: false,\n                map: clonedMap\n            };\n        }\n        var isColumnEverFilled = false;\n        var row = 0;\n        for (var i = 0; i < board_1.Board.ROWS - 1; i++) {\n            if (clonedMap[i + 1][column] !== board_1.BoardPiece.EMPTY) {\n                isColumnEverFilled = true;\n                row = i;\n                break;\n            }\n        }\n        if (!isColumnEverFilled) {\n            row = board_1.Board.ROWS - 1;\n        }\n        clonedMap[row][column] = boardPiece;\n        return {\n            success: true,\n            map: clonedMap\n        };\n    };\n    Utils.onresize = function () {\n        var callbacks = [], running = false;\n        function resize() {\n            if (!running) {\n                running = true;\n                if (window.requestAnimationFrame) {\n                    window.requestAnimationFrame(runCallbacks);\n                }\n                else {\n                    setTimeout(runCallbacks, 66);\n                }\n            }\n        }\n        function runCallbacks() {\n            callbacks.forEach(function (callback) {\n                callback();\n            });\n            running = false;\n        }\n        function addCallback(callback) {\n            if (callback) {\n                callbacks.push(callback);\n            }\n        }\n        return {\n            add: function (callback) {\n                if (!callbacks.length) {\n                    window.addEventListener('resize', resize);\n                }\n                addCallback(callback);\n            }\n        };\n    };\n    return Utils;\n}());\nUtils.BIG_POSITIVE_NUMBER = Math.pow(10, 9) + 7;\nUtils.BIG_NEGATIVE_NUMBER = -Utils.BIG_POSITIVE_NUMBER;\nexports.Utils = Utils;\n\n//# sourceMappingURL=utils.js.map\n"]}