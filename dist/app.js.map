{"version":3,"sources":["C:/Program Files (x86)/Nodist/bin/node_modules/browserify/node_modules/browser-pack/_prelude.js","dist/js/app.js","dist/js/board.js","dist/js/game/game-base.js","dist/js/game/game-flyweb.js","dist/js/game/game-local-2p.js","dist/js/game/game-local-ai.js","dist/js/game/index.js","dist/js/player/index.js","dist/js/player/player-ai.js","dist/js/player/player-flyweb-master.js","dist/js/player/player-flyweb-slave.js","dist/js/player/player-human.js","dist/js/player/player.js","dist/js/utils.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Object","defineProperty","value","Game","board_1","document","addEventListener","canvas","querySelector","Board","render","navigator","flywebOptionInput","setAttribute","modeChooser","modeDOM","modeInputDOMs","querySelectorAll","chosenMode","checked","initGameLocal2p","initGameFlyweb","clientMode","initGameLocalAi","classList","add","console","error","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","__generator","body","verb","v","op","TypeError","_","y","label","ops","pop","trys","push","g","sent","throw","return","Symbol","iterator","BoardPiece","utils_1","context","getContext","getBoardScale","initConstants","reset","onresize","prototype","map","ROWS","j","COLUMNS","EMPTY","winnerBoardPiece","Utils","clearCanvas","SCALE","window","innerWidth","CANVAS_HEIGHT","CANVAS_WIDTH","PIECE_RADIUS","MASK_X_BEGIN","Math","max","MASK_Y_BEGIN","MESSAGE_WIDTH","MESSAGE_X_BEGIN","MESSAGE_Y_BEGIN","width","height","_this","prevBoardScale","applyPlayerAction","player","column","isColumnEverFilled","row","_a","animateAction","boardPiece","debug","animationFrame","log","join","getWinner","direction","isWinningSequence","playerPiece","dir","count","countEmpty","k","DRAW","announceWinner","message","showMessage","getPlayerColor","PLAYER_1","PLAYER_1_COLOR","PLAYER_2","PLAYER_2_COLOR","newRow","fillStyle","currentY","doAnimation","drawCircle","x","strokeStyle","PIECE_STROKE_STYLE","drawMask","MASK_COLOR","GameBase","players","board","currentPlayerId","isMoveAllowed","isGameWon","start","winner","move","currentPlayer","actionSuccesful","action","getAction","afterMove","getNextPlayer","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","create","game_base_1","player_1","GameFlyweb","_super","BASE_URL","location","pathname","substring","lastIndexOf","browser","isAcceptingPlayer","playerSlave","playerMaster","initClient","initServer","socket","send","JSON","stringify","type","data","from","handleClientWs","WebSocket","host","onopen","evt","onclose","onerror","close","onmessage","parse","doAction","fetch","url","response","contentType","blob","headers","get","Content-Type","Cache-Control","Pragma","Expires","respondWith","Response","handleWsServer","accept","accepted","server","publishServer","onfetch","urlParts","params","_b","request","split","URLSearchParams","onwebsocket","PlayerFlywebSlave","PlayerFlywebMaster","game","GameLocal2p","PlayerHuman","GameLocalAi","PlayerAi","__export","m","ownBoardPieceValue","getBoardPieceValue","enemyBoardPiece","getStateValue","state","chainValue","tempRight","tempBottom","tempBottomRight","tempTopRight","abs","chain","transformValues","returnValue","depth","isWon","isLost","BIG_POSITIVE_NUMBER","BIG_NEGATIVE_NUMBER","getMove","alpha","beta","stateValue","MAX_DEPTH","minState","maxState","moveQueue","getMockPlayerAction","actionSuccessful","success","nextState","nextValue","choose","min","clone","Player","clickPromiseResolver","actionPromiseResolver","handleClick","event","rect","getBoundingClientRect","clientX","left","clientY","top","getColumnFromCoord","messageDOM","remove","messageContentDOM","innerHTML","messageDismissDOM","dismissHandler","removeEventListener","_c","_d","_e","_f","save","beginPath","arc","PI","fill","restore","doubleRadius","tripleRadius","clearRect","isCoordOnColumn","coord","columnXBegin","radius","getRandomColumnNumber","floor","random","choice","promise","requestAnimationFrame","array","arr","slice","clonedMap","resize","running","runCallbacks","setTimeout","callbacks","forEach","callback","addCallback","pow"],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Game = require(\"./game\");\nvar board_1 = require(\"./board\");\ndocument.addEventListener('DOMContentLoaded', function () {\n    var canvas = document.querySelector('canvas');\n    if (!canvas) {\n        console.error('Canvas DOM is null');\n        return;\n    }\n    var board = new board_1.Board(canvas);\n    board.render();\n    if (!('publishServer' in navigator)) {\n        var flywebOptionInput = document.querySelector('.mode-chooser-input-flyweb');\n        if (flywebOptionInput) {\n            flywebOptionInput.setAttribute('disabled', 'disabled');\n        }\n    }\n    var modeChooser = document.querySelector('.mode-chooser-submit');\n    if (modeChooser) {\n        modeChooser.addEventListener('click', function () {\n            var modeDOM = document.querySelector('.mode');\n            if (modeDOM) {\n                var modeInputDOMs = document.querySelectorAll('.mode-chooser-input');\n                var chosenMode = null;\n                for (var i = 0; i < modeInputDOMs.length; i++) {\n                    chosenMode = modeInputDOMs[i].checked ? modeInputDOMs[i].value : null;\n                    if (chosenMode) {\n                        break;\n                    }\n                }\n                if (!chosenMode) {\n                    chosenMode = 'offline-ai';\n                }\n                if (chosenMode === 'offline-human') {\n                    Game.initGameLocal2p();\n                }\n                else if (chosenMode === 'local-flyweb') {\n                    Game.initGameFlyweb({ clientMode: false });\n                }\n                else if (chosenMode === 'offline-ai') {\n                    Game.initGameLocalAi();\n                }\n                modeDOM.classList.add('invisible');\n                modeDOM.addEventListener('transitionend', function () {\n                    modeDOM.classList.add('hidden');\n                });\n            }\n        });\n    }\n});\n\n//# sourceMappingURL=app.js.map\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nvar BoardPiece;\n(function (BoardPiece) {\n    BoardPiece[BoardPiece[\"EMPTY\"] = 0] = \"EMPTY\";\n    BoardPiece[BoardPiece[\"PLAYER_1\"] = 1] = \"PLAYER_1\";\n    BoardPiece[BoardPiece[\"PLAYER_2\"] = 2] = \"PLAYER_2\";\n    BoardPiece[BoardPiece[\"DRAW\"] = 3] = \"DRAW\";\n})(BoardPiece = exports.BoardPiece || (exports.BoardPiece = {}));\nvar Board = (function () {\n    function Board(canvas) {\n        this.canvas = canvas;\n        this.context = canvas.getContext('2d');\n        this.getBoardScale();\n        this.initConstants();\n        this.reset();\n        this.onresize();\n    }\n    Board.prototype.reset = function () {\n        this.map = [];\n        for (var i = 0; i < Board.ROWS; i++) {\n            this.map.push([]);\n            for (var j = 0; j < Board.COLUMNS; j++) {\n                this.map[i].push(BoardPiece.EMPTY);\n            }\n        }\n        this.winnerBoardPiece = BoardPiece.EMPTY;\n        utils_1.Utils.clearCanvas(this);\n    };\n    Board.prototype.getBoardScale = function () {\n        return window.innerWidth < 640 ? (Board.SCALE = 0.5) : (Board.SCALE = 1.0);\n    };\n    Board.prototype.initConstants = function () {\n        Board.CANVAS_HEIGHT = Board.SCALE * 480;\n        Board.CANVAS_WIDTH = Board.SCALE * 640;\n        Board.PIECE_RADIUS = Board.SCALE * 25;\n        Board.MASK_X_BEGIN =\n            Math.max(0, Board.CANVAS_WIDTH - (3 * Board.COLUMNS + 1) * Board.PIECE_RADIUS) / 2;\n        Board.MASK_Y_BEGIN =\n            Math.max(0, Board.CANVAS_HEIGHT - (3 * Board.ROWS + 1) * Board.PIECE_RADIUS) / 2;\n        Board.MESSAGE_WIDTH = Board.SCALE * 400;\n        Board.MESSAGE_X_BEGIN = (Board.CANVAS_WIDTH - Board.MESSAGE_WIDTH) / 2;\n        Board.MESSAGE_Y_BEGIN = Board.SCALE * 20;\n        this.canvas.width = Board.CANVAS_WIDTH;\n        this.canvas.height = Board.CANVAS_HEIGHT;\n    };\n    Board.prototype.onresize = function () {\n        var _this = this;\n        var prevBoardScale = Board.SCALE;\n        utils_1.Utils.onresize().add(function () {\n            _this.getBoardScale();\n            if (prevBoardScale !== Board.SCALE) {\n                prevBoardScale = Board.SCALE;\n                _this.initConstants();\n                utils_1.Utils.clearCanvas(_this);\n                _this.render();\n            }\n        });\n    };\n    Board.prototype.applyPlayerAction = function (player, column) {\n        return __awaiter(this, void 0, void 0, function () {\n            var isColumnEverFilled, row, i;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.map[0][column] !== BoardPiece.EMPTY ||\n                            column < 0 ||\n                            column >= Board.COLUMNS) {\n                            return [2, false];\n                        }\n                        isColumnEverFilled = false;\n                        row = 0;\n                        for (i = 0; i < Board.ROWS - 1; i++) {\n                            if (this.map[i + 1][column] !== BoardPiece.EMPTY) {\n                                isColumnEverFilled = true;\n                                row = i;\n                                break;\n                            }\n                        }\n                        if (!isColumnEverFilled) {\n                            row = Board.ROWS - 1;\n                        }\n                        return [4, this.animateAction(row, column, player.boardPiece)];\n                    case 1:\n                        _a.sent();\n                        this.map[row][column] = player.boardPiece;\n                        this.debug();\n                        return [4, utils_1.Utils.animationFrame()];\n                    case 2:\n                        _a.sent();\n                        this.render();\n                        return [2, true];\n                }\n            });\n        });\n    };\n    Board.prototype.debug = function () {\n        console.log(this.map.map(function (row) { return row.join(' '); }).join('\\n'));\n    };\n    Board.prototype.getWinner = function () {\n        var _this = this;\n        if (this.winnerBoardPiece !== BoardPiece.EMPTY) {\n            return this.winnerBoardPiece;\n        }\n        var direction = [\n            [0, -1],\n            [0, 1],\n            [-1, -1],\n            [-1, 0],\n            [-1, 1],\n            [1, -1],\n            [1, 0],\n            [1, 1]\n        ];\n        var isWinningSequence = function (i, j, playerPiece, dir, count) {\n            if (count >= 4) {\n                return true;\n            }\n            if (i < 0 ||\n                j < 0 ||\n                i >= Board.ROWS ||\n                j >= Board.COLUMNS ||\n                _this.map[i][j] !== playerPiece) {\n                return false;\n            }\n            return isWinningSequence(i + dir[0], j + dir[1], playerPiece, dir, count + 1);\n        };\n        var countEmpty = 0;\n        for (var i = 0; i < Board.ROWS; i++) {\n            for (var j = 0; j < Board.COLUMNS; j++) {\n                var playerPiece = this.map[i][j];\n                if (playerPiece !== BoardPiece.EMPTY) {\n                    for (var k = 0; k < direction.length; k++) {\n                        var isWon = isWinningSequence(i + direction[k][0], j + direction[k][1], playerPiece, direction[k], 1);\n                        if (isWon) {\n                            return (this.winnerBoardPiece = playerPiece);\n                        }\n                    }\n                }\n                else {\n                    countEmpty++;\n                }\n            }\n        }\n        if (countEmpty === 0) {\n            return (this.winnerBoardPiece = BoardPiece.DRAW);\n        }\n        return BoardPiece.EMPTY;\n    };\n    Board.prototype.announceWinner = function () {\n        if (this.winnerBoardPiece === BoardPiece.EMPTY) {\n            return;\n        }\n        var message = '<h1>Thank you for playing.</h1>';\n        if (this.winnerBoardPiece === BoardPiece.DRAW) {\n            message += \"It's a draw\";\n        }\n        else {\n            message += \"Player \" + this.winnerBoardPiece + \" wins\";\n        }\n        message +=\n            '.<br />After dismissing this message, click the board to reset game.';\n        utils_1.Utils.showMessage(message);\n    };\n    Board.prototype.getPlayerColor = function (boardPiece) {\n        switch (boardPiece) {\n            case BoardPiece.PLAYER_1:\n                return Board.PLAYER_1_COLOR;\n            case BoardPiece.PLAYER_2:\n                return Board.PLAYER_2_COLOR;\n            default:\n                return 'transparent';\n        }\n    };\n    Board.prototype.animateAction = function (newRow, column, boardPiece) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var fillStyle, currentY, doAnimation;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        fillStyle = this.getPlayerColor(boardPiece);\n                        currentY = 0;\n                        doAnimation = function () { return __awaiter(_this, void 0, void 0, function () {\n                            return __generator(this, function (_a) {\n                                utils_1.Utils.clearCanvas(this);\n                                utils_1.Utils.drawCircle(this.context, {\n                                    x: 3 * Board.PIECE_RADIUS * column +\n                                        Board.MASK_X_BEGIN +\n                                        2 * Board.PIECE_RADIUS,\n                                    y: currentY + Board.MASK_Y_BEGIN + 2 * Board.PIECE_RADIUS,\n                                    r: Board.PIECE_RADIUS,\n                                    fillStyle: fillStyle,\n                                    strokeStyle: Board.PIECE_STROKE_STYLE\n                                });\n                                this.render();\n                                currentY += Board.PIECE_RADIUS;\n                                return [2];\n                            });\n                        }); };\n                        _a.label = 1;\n                    case 1:\n                        if (!(newRow * 3 * Board.PIECE_RADIUS >= currentY)) return [3, 3];\n                        return [4, utils_1.Utils.animationFrame()];\n                    case 2:\n                        _a.sent();\n                        doAnimation();\n                        return [3, 1];\n                    case 3: return [2];\n                }\n            });\n        });\n    };\n    Board.prototype.render = function () {\n        utils_1.Utils.drawMask(this);\n        for (var y = 0; y < Board.ROWS; y++) {\n            for (var x = 0; x < Board.COLUMNS; x++) {\n                utils_1.Utils.drawCircle(this.context, {\n                    x: 3 * Board.PIECE_RADIUS * x +\n                        Board.MASK_X_BEGIN +\n                        2 * Board.PIECE_RADIUS,\n                    y: 3 * Board.PIECE_RADIUS * y +\n                        Board.MASK_Y_BEGIN +\n                        2 * Board.PIECE_RADIUS,\n                    r: Board.PIECE_RADIUS,\n                    fillStyle: this.getPlayerColor(this.map[y][x]),\n                    strokeStyle: Board.PIECE_STROKE_STYLE\n                });\n            }\n        }\n    };\n    Board.ROWS = 6;\n    Board.COLUMNS = 7;\n    Board.PLAYER_1_COLOR = '#ef453b';\n    Board.PLAYER_2_COLOR = '#0059ff';\n    Board.PIECE_STROKE_STYLE = 'black';\n    Board.MASK_COLOR = '#d8d8d8';\n    return Board;\n}());\nexports.Board = Board;\n\n//# sourceMappingURL=board.js.map\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar board_1 = require(\"../board\");\nvar GameBase = (function () {\n    function GameBase(players, canvas) {\n        this.board = new board_1.Board(canvas);\n        this.players = players;\n        this.currentPlayerId = 0;\n        this.reset();\n    }\n    GameBase.prototype.reset = function () {\n        this.isMoveAllowed = false;\n        this.isGameWon = false;\n        this.board.reset();\n        this.board.render();\n        this.board.debug();\n    };\n    GameBase.prototype.start = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var winner;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.isMoveAllowed = true;\n                        _a.label = 1;\n                    case 1:\n                        if (!!this.isGameWon) return [3, 3];\n                        return [4, this.move()];\n                    case 2:\n                        _a.sent();\n                        winner = this.board.getWinner();\n                        if (winner !== board_1.BoardPiece.EMPTY) {\n                            console.log('Game over: winner is player ', winner);\n                            this.isGameWon = true;\n                            this.isMoveAllowed = false;\n                            this.board.announceWinner();\n                            return [3, 3];\n                        }\n                        return [3, 1];\n                    case 3: return [2];\n                }\n            });\n        });\n    };\n    GameBase.prototype.move = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var currentPlayer, actionSuccesful, action;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isMoveAllowed) {\n                            return [2];\n                        }\n                        currentPlayer = this.players[this.currentPlayerId];\n                        actionSuccesful = false;\n                        _a.label = 1;\n                    case 1:\n                        if (!!actionSuccesful) return [3, 4];\n                        return [4, currentPlayer.getAction(this.board)];\n                    case 2:\n                        action = _a.sent();\n                        this.isMoveAllowed = false;\n                        return [4, this.board.applyPlayerAction(currentPlayer, action)];\n                    case 3:\n                        actionSuccesful = _a.sent();\n                        this.isMoveAllowed = true;\n                        if (!actionSuccesful) {\n                            console.log('Move not allowed! Try again.');\n                        }\n                        else {\n                            this.afterMove(action);\n                        }\n                        return [3, 1];\n                    case 4:\n                        this.currentPlayerId = this.getNextPlayer();\n                        return [2];\n                }\n            });\n        });\n    };\n    GameBase.prototype.afterMove = function (action) {\n    };\n    GameBase.prototype.getNextPlayer = function () {\n        return this.currentPlayerId === 0 ? 1 : 0;\n    };\n    return GameBase;\n}());\nexports.GameBase = GameBase;\n\n//# sourceMappingURL=game-base.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar game_base_1 = require(\"./game-base\");\nvar player_1 = require(\"../player\");\nvar board_1 = require(\"../board\");\nvar utils_1 = require(\"../utils\");\nvar GameFlyweb = (function (_super) {\n    __extends(GameFlyweb, _super);\n    function GameFlyweb(players, canvas, clientMode) {\n        if (clientMode === void 0) { clientMode = false; }\n        var _this = _super.call(this, players, canvas) || this;\n        _this.BASE_URL = window.location.pathname.substring(0, window.location.pathname.lastIndexOf('/'));\n        _this.browser = navigator;\n        _this.isAcceptingPlayer = true;\n        _this.clientMode = clientMode;\n        if (clientMode) {\n            _this.playerSlave = players[0];\n            _this.playerMaster = players[1];\n            _this.initClient();\n        }\n        else {\n            _this.playerMaster = players[0];\n            _this.playerSlave = players[1];\n            _this.initServer();\n        }\n        return _this;\n    }\n    GameFlyweb.prototype.afterMove = function (action) {\n        if ((this.clientMode && this.currentPlayerId === 1) ||\n            (!this.clientMode && this.currentPlayerId === 0)) {\n            this.playerMaster.socket.send(JSON.stringify({\n                type: 'move',\n                data: {\n                    column: action,\n                    from: this.currentPlayerId === 0 ? 'server' : 'client'\n                }\n            }));\n        }\n    };\n    GameFlyweb.prototype.initClient = function () {\n        this.handleClientWs();\n    };\n    GameFlyweb.prototype.handleClientWs = function () {\n        var _this = this;\n        var socket = new WebSocket('ws://' + window.location.host + '/api/ws');\n        this.playerMaster.socket = socket;\n        socket.onopen = function (evt) {\n            console.log('client socket.onopen()', evt);\n        };\n        socket.onclose = function (evt) {\n            console.log('client socket.onclose()', evt);\n        };\n        socket.onerror = function (evt) {\n            console.log('client socket.onerror()', evt);\n            socket.close();\n        };\n        socket.onmessage = function (evt) { return __awaiter(_this, void 0, void 0, function () {\n            var message;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        console.log('client socket.onmessage()', evt);\n                        message = JSON.parse(evt.data);\n                        if (!message) {\n                            return [2];\n                        }\n                        if (message.from === 'client') {\n                            return [2];\n                        }\n                        if (!(message.type === 'start')) return [3, 1];\n                        utils_1.Utils.showMessage('<h1>Welcome!</h1>Connection to Player 1 has been established. Game started!');\n                        this.start();\n                        return [3, 4];\n                    case 1:\n                        if (!(message.type === 'move')) return [3, 2];\n                        this.playerSlave.doAction(message.data.column);\n                        return [3, 4];\n                    case 2:\n                        if (!(message.type === 'reset')) return [3, 4];\n                        this.reset();\n                        return [4, utils_1.Utils.animationFrame()];\n                    case 3:\n                        _a.sent();\n                        this.start();\n                        _a.label = 4;\n                    case 4: return [2];\n                }\n            });\n        }); };\n    };\n    GameFlyweb.prototype.fetch = function (evt, url) {\n        return __awaiter(this, void 0, void 0, function () {\n            var response, contentType, blob, headers;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, fetch(this.BASE_URL + url)];\n                    case 1:\n                        response = _a.sent();\n                        contentType = response.headers.get('Content-Type');\n                        return [4, response.blob()];\n                    case 2:\n                        blob = _a.sent();\n                        headers = {\n                            'Content-Type': contentType,\n                            'Cache-Control': 'no-cache, no-store, must-revalidate',\n                            Pragma: 'no-cache',\n                            Expires: 0\n                        };\n                        console.log('Response is: ', url);\n                        evt.respondWith(new Promise(function (r) { return r(new Response(blob, { headers: headers })); }));\n                        return [2];\n                }\n            });\n        });\n    };\n    GameFlyweb.prototype.handleWsServer = function (evt) {\n        var _this = this;\n        var socket = evt.accept();\n        this.playerMaster.socket = socket;\n        socket.onopen = function (evt) {\n            console.log('server socket.onopen()', evt, socket);\n            if (_this.isAcceptingPlayer) {\n                _this.isAcceptingPlayer = false;\n                socket.send(JSON.stringify({\n                    type: 'start',\n                    data: {\n                        accepted: _this.isAcceptingPlayer\n                    }\n                }));\n                utils_1.Utils.showMessage('<h1>Welcome!</h1>Connection to Player 2 has been established. Game started!');\n                _this.start();\n            }\n            else {\n                socket.close();\n            }\n        };\n        socket.onclose = function (evt) {\n            console.log('server socket.onclose()', evt);\n            _this.isAcceptingPlayer = true;\n            _this.reset();\n        };\n        socket.onerror = function (evt) {\n            console.log('server socket.onerror()', evt);\n            _this.isAcceptingPlayer = true;\n            socket.close();\n        };\n        socket.onmessage = function (evt) { return __awaiter(_this, void 0, void 0, function () {\n            var message;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        console.log('server socket.onmessage()', evt);\n                        message = JSON.parse(evt.data);\n                        if (!message) {\n                            return [2];\n                        }\n                        if (message.from === 'server') {\n                            return [2];\n                        }\n                        if (!(message.type === 'move')) return [3, 1];\n                        this.playerSlave.doAction(message.data.column);\n                        return [3, 3];\n                    case 1:\n                        if (!(message.type === 'reset')) return [3, 3];\n                        this.reset();\n                        return [4, utils_1.Utils.animationFrame()];\n                    case 2:\n                        _a.sent();\n                        this.start();\n                        _a.label = 3;\n                    case 3: return [2];\n                }\n            });\n        }); };\n    };\n    GameFlyweb.prototype.initServer = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var server;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!('publishServer' in this.browser)) {\n                            utils_1.Utils.showMessage(\"<h1>Attention!</h1>\\n        FlyWeb requires Firefox Developer Edition or Nightly,\\n        and enabling \\\"dom.flyweb.enabled\\\" flag at about:config\");\n                            return [2, false];\n                        }\n                        return [4, this.browser.publishServer('c4 - Connect Four')];\n                    case 1:\n                        server = _a.sent();\n                        server.onfetch = function (evt) { return __awaiter(_this, void 0, void 0, function () {\n                            var urlParts, url, params, _a;\n                            return __generator(this, function (_b) {\n                                switch (_b.label) {\n                                    case 0:\n                                        urlParts = evt.request.url.split('?');\n                                        url = urlParts[0];\n                                        params = new URLSearchParams(urlParts[1]);\n                                        console.log('me Requested for url: ', url, params);\n                                        _a = url;\n                                        switch (_a) {\n                                            case '/dist/app.js': return [3, 1];\n                                        }\n                                        return [3, 3];\n                                    case 1: return [4, this.fetch(evt, '/dist/app-flyweb-client.js')];\n                                    case 2:\n                                        _b.sent();\n                                        return [3, 5];\n                                    case 3: return [4, this.fetch(evt, url)];\n                                    case 4:\n                                        _b.sent();\n                                        _b.label = 5;\n                                    case 5: return [2];\n                                }\n                            });\n                        }); };\n                        server.onwebsocket = function (evt) {\n                            var url = evt.request.url;\n                            if (url === '/api/ws') {\n                                _this.handleWsServer(evt);\n                            }\n                        };\n                        return [2];\n                }\n            });\n        });\n    };\n    return GameFlyweb;\n}(game_base_1.GameBase));\nfunction initGameFlyweb(_a) {\n    var _this = this;\n    var _b = _a.clientMode, clientMode = _b === void 0 ? false : _b;\n    var canvas = document.querySelector('canvas');\n    if (!canvas) {\n        console.error('Canvas DOM is null');\n        return;\n    }\n    var players = [];\n    if (clientMode) {\n        players = [\n            new player_1.PlayerFlywebSlave(board_1.BoardPiece.PLAYER_1, canvas),\n            new player_1.PlayerFlywebMaster(board_1.BoardPiece.PLAYER_2, canvas)\n        ];\n    }\n    else {\n        players = [\n            new player_1.PlayerFlywebMaster(board_1.BoardPiece.PLAYER_1, canvas),\n            new player_1.PlayerFlywebSlave(board_1.BoardPiece.PLAYER_2, canvas)\n        ];\n    }\n    var game = new GameFlyweb(players, canvas, clientMode);\n    utils_1.Utils.showMessage('<h1>Welcome!</h1>Game will start after Player 2 has been connected.');\n    canvas.addEventListener('click', function () { return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!game.isGameWon) return [3, 2];\n                    game.reset();\n                    if (game.playerMaster && game.playerMaster.socket) {\n                        game.playerMaster.socket.send(JSON.stringify({\n                            type: 'reset',\n                            data: {\n                                reset: true\n                            }\n                        }));\n                    }\n                    return [4, utils_1.Utils.animationFrame()];\n                case 1:\n                    _a.sent();\n                    game.start();\n                    _a.label = 2;\n                case 2: return [2];\n            }\n        });\n    }); });\n}\nexports.initGameFlyweb = initGameFlyweb;\n\n//# sourceMappingURL=game-flyweb.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar board_1 = require(\"../board\");\nvar game_base_1 = require(\"./game-base\");\nvar player_1 = require(\"../player\");\nvar utils_1 = require(\"../utils\");\nvar GameLocal2p = (function (_super) {\n    __extends(GameLocal2p, _super);\n    function GameLocal2p(players, canvas) {\n        return _super.call(this, players, canvas) || this;\n    }\n    return GameLocal2p;\n}(game_base_1.GameBase));\nfunction initGameLocal2p() {\n    var _this = this;\n    var canvas = document.querySelector('canvas');\n    if (!canvas) {\n        console.error('Canvas DOM is null');\n        return;\n    }\n    var game = new GameLocal2p([\n        new player_1.PlayerHuman(board_1.BoardPiece.PLAYER_1, canvas),\n        new player_1.PlayerHuman(board_1.BoardPiece.PLAYER_2, canvas)\n    ], canvas);\n    game.start();\n    canvas.addEventListener('click', function () { return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!game.isGameWon) return [3, 2];\n                    game.reset();\n                    return [4, utils_1.Utils.animationFrame()];\n                case 1:\n                    _a.sent();\n                    game.start();\n                    _a.label = 2;\n                case 2: return [2];\n            }\n        });\n    }); });\n}\nexports.initGameLocal2p = initGameLocal2p;\n\n//# sourceMappingURL=game-local-2p.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar board_1 = require(\"../board\");\nvar game_base_1 = require(\"./game-base\");\nvar player_1 = require(\"../player\");\nvar utils_1 = require(\"../utils\");\nvar GameLocalAi = (function (_super) {\n    __extends(GameLocalAi, _super);\n    function GameLocalAi(players, canvas) {\n        return _super.call(this, players, canvas) || this;\n    }\n    return GameLocalAi;\n}(game_base_1.GameBase));\nfunction initGameLocalAi() {\n    var _this = this;\n    var canvas = document.querySelector('canvas');\n    if (!canvas) {\n        console.error('Canvas DOM is null');\n        return;\n    }\n    var game = new GameLocalAi([\n        new player_1.PlayerHuman(board_1.BoardPiece.PLAYER_1, canvas),\n        new player_1.PlayerAi(board_1.BoardPiece.PLAYER_2, canvas)\n    ], canvas);\n    game.start();\n    canvas.addEventListener('click', function () { return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!game.isGameWon) return [3, 2];\n                    game.reset();\n                    return [4, utils_1.Utils.animationFrame()];\n                case 1:\n                    _a.sent();\n                    game.start();\n                    _a.label = 2;\n                case 2: return [2];\n            }\n        });\n    }); });\n}\nexports.initGameLocalAi = initGameLocalAi;\n\n//# sourceMappingURL=game-local-ai.js.map\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./game-flyweb\"));\n__export(require(\"./game-local-2p\"));\n__export(require(\"./game-local-ai\"));\n\n//# sourceMappingURL=index.js.map\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./player\"));\n__export(require(\"./player-ai\"));\n__export(require(\"./player-human\"));\n__export(require(\"./player-flyweb-master\"));\n__export(require(\"./player-flyweb-slave\"));\n\n//# sourceMappingURL=index.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar player_1 = require(\"./player\");\nvar board_1 = require(\"../board\");\nvar utils_1 = require(\"../utils\");\nvar PlayerAi = (function (_super) {\n    __extends(PlayerAi, _super);\n    function PlayerAi(boardPiece, canvas) {\n        var _this = _super.call(this, boardPiece, canvas) || this;\n        _this.ownBoardPieceValue = _this.getBoardPieceValue(boardPiece);\n        _this.enemyBoardPiece =\n            boardPiece === board_1.BoardPiece.PLAYER_1\n                ? board_1.BoardPiece.PLAYER_2\n                : board_1.BoardPiece.PLAYER_1;\n        return _this;\n    }\n    PlayerAi.prototype.getBoardPieceValue = function (boardPiece) {\n        return boardPiece === board_1.BoardPiece.EMPTY\n            ? 0\n            : boardPiece === this.boardPiece ? 1 : -1;\n    };\n    PlayerAi.prototype.getStateValue = function (state) {\n        var winnerBoardPiece = board_1.BoardPiece.EMPTY;\n        var chainValue = 0;\n        for (var i = 0; i < board_1.Board.ROWS; i++) {\n            for (var j = 0; j < board_1.Board.COLUMNS; j++) {\n                var tempRight = 0, tempBottom = 0, tempBottomRight = 0, tempTopRight = 0;\n                for (var k = 0; k <= 3; k++) {\n                    if (j + k < board_1.Board.COLUMNS) {\n                        tempRight += this.getBoardPieceValue(state[i][j + k]);\n                    }\n                    if (i + k < board_1.Board.ROWS) {\n                        tempBottom += this.getBoardPieceValue(state[i + k][j]);\n                    }\n                    if (i + k < board_1.Board.ROWS && j + k < board_1.Board.COLUMNS) {\n                        tempBottomRight += this.getBoardPieceValue(state[i + k][j + k]);\n                    }\n                    if (i - k >= 0 && j + k < 7) {\n                        tempTopRight += this.getBoardPieceValue(state[i - k][j + k]);\n                    }\n                }\n                chainValue += tempRight * tempRight * tempRight;\n                chainValue += tempBottom * tempBottom * tempBottom;\n                chainValue += tempBottomRight * tempBottomRight * tempBottomRight;\n                chainValue += tempTopRight * tempTopRight * tempTopRight;\n                if (Math.abs(tempRight) === 4) {\n                    winnerBoardPiece =\n                        tempRight > 0 ? this.boardPiece : this.enemyBoardPiece;\n                }\n                else if (Math.abs(tempBottom) === 4) {\n                    winnerBoardPiece =\n                        tempBottom > 0 ? this.boardPiece : this.enemyBoardPiece;\n                }\n                else if (Math.abs(tempBottomRight) === 4) {\n                    winnerBoardPiece =\n                        tempBottomRight > 0 ? this.boardPiece : this.enemyBoardPiece;\n                }\n                else if (Math.abs(tempTopRight) === 4) {\n                    winnerBoardPiece =\n                        tempTopRight > 0 ? this.boardPiece : this.enemyBoardPiece;\n                }\n            }\n        }\n        return {\n            winnerBoardPiece: winnerBoardPiece,\n            chain: chainValue\n        };\n    };\n    PlayerAi.prototype.transformValues = function (returnValue, winnerBoardPiece, depth) {\n        var isWon = winnerBoardPiece === this.boardPiece;\n        var isLost = winnerBoardPiece === this.enemyBoardPiece;\n        if (isWon) {\n            returnValue = utils_1.Utils.BIG_POSITIVE_NUMBER - 100;\n        }\n        else if (isLost) {\n            returnValue = utils_1.Utils.BIG_NEGATIVE_NUMBER + 100;\n        }\n        returnValue -= depth * depth;\n        return returnValue;\n    };\n    PlayerAi.prototype.getMove = function (state, depth, alpha, beta) {\n        var stateValue = this.getStateValue(state);\n        var isWon = stateValue.winnerBoardPiece === this.boardPiece;\n        var isLost = stateValue.winnerBoardPiece === this.enemyBoardPiece;\n        if (depth >= PlayerAi.MAX_DEPTH || isWon || isLost) {\n            return {\n                value: this.transformValues(stateValue.chain * this.ownBoardPieceValue, stateValue.winnerBoardPiece, depth),\n                move: -1\n            };\n        }\n        return depth % 2 === 0\n            ? this.minState(state, depth + 1, alpha, beta)\n            : this.maxState(state, depth + 1, alpha, beta);\n    };\n    PlayerAi.prototype.maxState = function (state, depth, alpha, beta) {\n        var value = utils_1.Utils.BIG_NEGATIVE_NUMBER;\n        var moveQueue = [];\n        for (var column = 0; column < board_1.Board.COLUMNS; column++) {\n            var _a = utils_1.Utils.getMockPlayerAction(state, this.boardPiece, column), actionSuccessful = _a.success, nextState = _a.map;\n            if (actionSuccessful) {\n                var _b = this.getMove(nextState, depth, alpha, beta), nextValue = _b.value, nextMove = _b.move;\n                if (nextValue > value) {\n                    value = nextValue;\n                    moveQueue = [column];\n                }\n                else if (nextValue === value) {\n                    moveQueue.push(column);\n                }\n                if (value > beta) {\n                    return {\n                        value: value,\n                        move: utils_1.Utils.choose(moveQueue)\n                    };\n                }\n                alpha = Math.max(alpha, value);\n            }\n        }\n        return {\n            value: value,\n            move: utils_1.Utils.choose(moveQueue)\n        };\n    };\n    PlayerAi.prototype.minState = function (state, depth, alpha, beta) {\n        var value = utils_1.Utils.BIG_POSITIVE_NUMBER;\n        var moveQueue = [];\n        for (var column = 0; column < board_1.Board.COLUMNS; column++) {\n            var _a = utils_1.Utils.getMockPlayerAction(state, this.enemyBoardPiece, column), actionSuccessful = _a.success, nextState = _a.map;\n            if (actionSuccessful) {\n                var _b = this.getMove(nextState, depth, alpha, beta), nextValue = _b.value, nextMove = _b.move;\n                if (nextValue < value) {\n                    value = nextValue;\n                    moveQueue = [column];\n                }\n                else if (nextValue === value) {\n                    moveQueue.push(column);\n                }\n                if (value < alpha) {\n                    return {\n                        value: value,\n                        move: utils_1.Utils.choose(moveQueue)\n                    };\n                }\n                beta = Math.min(beta, value);\n            }\n        }\n        return {\n            value: value,\n            move: utils_1.Utils.choose(moveQueue)\n        };\n    };\n    PlayerAi.prototype.getAction = function (board) {\n        return __awaiter(this, void 0, void 0, function () {\n            var state, action;\n            return __generator(this, function (_a) {\n                state = utils_1.Utils.clone(board.map);\n                action = this.maxState(state, 0, utils_1.Utils.BIG_NEGATIVE_NUMBER, utils_1.Utils.BIG_POSITIVE_NUMBER);\n                console.log(\"AI \" + this\n                    .boardPiece + \" choose column \" + action.move + \" with value of \" + action.value);\n                return [2, action.move];\n            });\n        });\n    };\n    PlayerAi.MAX_DEPTH = 4;\n    return PlayerAi;\n}(player_1.Player));\nexports.PlayerAi = PlayerAi;\n\n//# sourceMappingURL=player-ai.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = require(\".\");\nvar PlayerFlywebMaster = (function (_super) {\n    __extends(PlayerFlywebMaster, _super);\n    function PlayerFlywebMaster(boardPiece, canvas) {\n        var _this = _super.call(this, boardPiece, canvas) || this;\n        _this.clickPromiseResolver = null;\n        return _this;\n    }\n    PlayerFlywebMaster.prototype.doAction = function (column) {\n        _super.prototype.doAction.call(this, column);\n        if (!this.socket) {\n            throw Error('PlayerFlywebMaster need WebSocket object');\n        }\n    };\n    PlayerFlywebMaster.prototype.getAction = function (board) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2, new Promise(function (r) { return _this.clickPromiseResolver = r; })];\n            });\n        });\n    };\n    return PlayerFlywebMaster;\n}(_1.PlayerHuman));\nexports.PlayerFlywebMaster = PlayerFlywebMaster;\n\n//# sourceMappingURL=player-flyweb-master.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar player_1 = require(\"./player\");\nvar PlayerFlywebSlave = (function (_super) {\n    __extends(PlayerFlywebSlave, _super);\n    function PlayerFlywebSlave(boardPiece, canvas) {\n        var _this = _super.call(this, boardPiece, canvas) || this;\n        _this.actionPromiseResolver = null;\n        return _this;\n    }\n    PlayerFlywebSlave.prototype.doAction = function (column) {\n        if (this.actionPromiseResolver) {\n            this.actionPromiseResolver(column);\n        }\n    };\n    PlayerFlywebSlave.prototype.getAction = function (board) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2, new Promise(function (r) { return (_this.actionPromiseResolver = r); })];\n            });\n        });\n    };\n    return PlayerFlywebSlave;\n}(player_1.Player));\nexports.PlayerFlywebSlave = PlayerFlywebSlave;\n\n//# sourceMappingURL=player-flyweb-slave.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar player_1 = require(\"./player\");\nvar board_1 = require(\"../board\");\nvar utils_1 = require(\"../utils\");\nvar PlayerHuman = (function (_super) {\n    __extends(PlayerHuman, _super);\n    function PlayerHuman(boardPiece, canvas) {\n        var _this = _super.call(this, boardPiece, canvas) || this;\n        _this.clickPromiseResolver = null;\n        canvas.addEventListener('click', function (evt) {\n            try {\n                _this.handleClick(evt);\n            }\n            catch (e) {\n                console.error(e);\n            }\n        });\n        return _this;\n    }\n    PlayerHuman.prototype.doAction = function (column) {\n        if (this.clickPromiseResolver && 0 <= column && column < board_1.Board.COLUMNS) {\n            this.clickPromiseResolver(column);\n        }\n    };\n    PlayerHuman.prototype.handleClick = function (event) {\n        var rect = this.canvas.getBoundingClientRect();\n        var x = event.clientX - rect.left;\n        var y = event.clientY - rect.top;\n        var column = utils_1.Utils.getColumnFromCoord({ x: x, y: y });\n        this.doAction(column);\n    };\n    PlayerHuman.prototype.getAction = function (board) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2, new Promise(function (r) { return (_this.clickPromiseResolver = r); })];\n            });\n        });\n    };\n    return PlayerHuman;\n}(player_1.Player));\nexports.PlayerHuman = PlayerHuman;\n\n//# sourceMappingURL=player-human.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Player = (function () {\n    function Player(boardPiece, canvas) {\n        this.boardPiece = boardPiece;\n        this.canvas = canvas;\n    }\n    return Player;\n}());\nexports.Player = Player;\n\n//# sourceMappingURL=player.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar board_1 = require(\"./board\");\nvar Utils = (function () {\n    function Utils() {\n    }\n    Utils.showMessage = function (message) {\n        if (message === void 0) { message = ''; }\n        var messageDOM = document.querySelector('.message');\n        if (!messageDOM) {\n            console.error('Message DOM is null!');\n            return;\n        }\n        messageDOM.classList.remove('hidden');\n        var messageContentDOM = document.querySelector('.message-body-content');\n        if (!messageContentDOM) {\n            console.error('Message body content DOM is null!');\n            return;\n        }\n        messageContentDOM.innerHTML = message;\n        var messageDismissDOM = document.querySelector('.message-body-dismiss');\n        if (!messageDismissDOM) {\n            console.error('Message body dismiss DOM is null!');\n            return;\n        }\n        var dismissHandler = function () {\n            messageDOM.classList.add('invisible');\n            messageDOM.addEventListener('transitionend', function () {\n                messageDOM.classList.add('hidden');\n                messageDOM.classList.remove('invisible');\n            });\n            messageDismissDOM.removeEventListener('click', dismissHandler);\n        };\n        messageDismissDOM.addEventListener('click', dismissHandler);\n    };\n    Utils.drawCircle = function (context, _a) {\n        var _b = _a.x, x = _b === void 0 ? 0 : _b, _c = _a.y, y = _c === void 0 ? 0 : _c, _d = _a.r, r = _d === void 0 ? 0 : _d, _e = _a.fillStyle, fillStyle = _e === void 0 ? '' : _e, _f = _a.strokeStyle, strokeStyle = _f === void 0 ? '' : _f;\n        context.save();\n        context.fillStyle = fillStyle;\n        context.strokeStyle = strokeStyle;\n        context.beginPath();\n        context.arc(x, y, r, 0, 2 * Math.PI, false);\n        context.fill();\n        context.restore();\n    };\n    Utils.drawMask = function (board) {\n        var context = board.context;\n        context.save();\n        context.fillStyle = board_1.Board.MASK_COLOR;\n        context.beginPath();\n        var doubleRadius = 2 * board_1.Board.PIECE_RADIUS;\n        var tripleRadius = 3 * board_1.Board.PIECE_RADIUS;\n        for (var y = 0; y < board_1.Board.ROWS; y++) {\n            for (var x = 0; x < board_1.Board.COLUMNS; x++) {\n                context.arc(tripleRadius * x + board_1.Board.MASK_X_BEGIN + doubleRadius, tripleRadius * y + board_1.Board.MASK_Y_BEGIN + doubleRadius, board_1.Board.PIECE_RADIUS, 0, 2 * Math.PI);\n                context.rect(tripleRadius * x + board_1.Board.MASK_X_BEGIN + 2 * doubleRadius, tripleRadius * y + board_1.Board.MASK_Y_BEGIN, -2 * doubleRadius, 2 * doubleRadius);\n            }\n        }\n        context.fill();\n        context.restore();\n    };\n    Utils.clearCanvas = function (board) {\n        board.context.clearRect(0, 0, board.canvas.width, board.canvas.height);\n    };\n    Utils.isCoordOnColumn = function (coord, columnXBegin, radius) {\n        return ((coord.x - columnXBegin) * (coord.x - columnXBegin) <= radius * radius);\n    };\n    Utils.getColumnFromCoord = function (coord) {\n        for (var i = 0; i < board_1.Board.COLUMNS; i++) {\n            if (Utils.isCoordOnColumn(coord, 3 * board_1.Board.PIECE_RADIUS * i +\n                board_1.Board.MASK_X_BEGIN +\n                2 * board_1.Board.PIECE_RADIUS, board_1.Board.PIECE_RADIUS)) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    Utils.getRandomColumnNumber = function () {\n        return Math.floor(Math.random() * board_1.Board.COLUMNS);\n    };\n    Utils.choose = function (choice) {\n        return choice[Math.floor(Math.random() * choice.length)];\n    };\n    Utils.animationFrame = function () {\n        var resolve = null;\n        var promise = new Promise(function (r) { return (resolve = r); });\n        if (resolve) {\n            window.requestAnimationFrame(resolve);\n        }\n        return promise;\n    };\n    Utils.clone = function (array) {\n        var arr = [];\n        for (var i = 0; i < array.length; i++) {\n            arr[i] = array[i].slice();\n        }\n        return arr;\n    };\n    Utils.getMockPlayerAction = function (map, boardPiece, column) {\n        var clonedMap = Utils.clone(map);\n        if (clonedMap[0][column] !== board_1.BoardPiece.EMPTY ||\n            column < 0 ||\n            column >= board_1.Board.COLUMNS) {\n            return {\n                success: false,\n                map: clonedMap\n            };\n        }\n        var isColumnEverFilled = false;\n        var row = 0;\n        for (var i = 0; i < board_1.Board.ROWS - 1; i++) {\n            if (clonedMap[i + 1][column] !== board_1.BoardPiece.EMPTY) {\n                isColumnEverFilled = true;\n                row = i;\n                break;\n            }\n        }\n        if (!isColumnEverFilled) {\n            row = board_1.Board.ROWS - 1;\n        }\n        clonedMap[row][column] = boardPiece;\n        return {\n            success: true,\n            map: clonedMap\n        };\n    };\n    Utils.onresize = function () {\n        var callbacks = [], running = false;\n        function resize() {\n            if (!running) {\n                running = true;\n                if (window.requestAnimationFrame) {\n                    window.requestAnimationFrame(runCallbacks);\n                }\n                else {\n                    setTimeout(runCallbacks, 66);\n                }\n            }\n        }\n        function runCallbacks() {\n            callbacks.forEach(function (callback) {\n                callback();\n            });\n            running = false;\n        }\n        function addCallback(callback) {\n            if (callback) {\n                callbacks.push(callback);\n            }\n        }\n        return {\n            add: function (callback) {\n                if (!callbacks.length) {\n                    window.addEventListener('resize', resize);\n                }\n                addCallback(callback);\n            }\n        };\n    };\n    Utils.BIG_POSITIVE_NUMBER = Math.pow(10, 9) + 7;\n    Utils.BIG_NEGATIVE_NUMBER = -Utils.BIG_POSITIVE_NUMBER;\n    return Utils;\n}());\nexports.Utils = Utils;\n\n//# sourceMappingURL=utils.js.map\n"]}